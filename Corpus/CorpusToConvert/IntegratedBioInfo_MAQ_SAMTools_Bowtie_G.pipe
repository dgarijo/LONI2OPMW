<?xml version="1.0" encoding="UTF-8"?>
<pipeline version=".1">
        <connections>
                <connection source="MAQIndexingAlignment_1.Outputfastqfie" sink="MAQOutputs_1.Input" />
                <connection source="MAQIndexingAlignment_1.Outputbinaryfastqfilebfq" sink="MAQOutputs_1.Input" />
                <connection source="MAQIndexingAlignment_1.Outputmappingfilemap" sink="MAQOutputs_1.Input" />
                <connection source="MAQIndexingAlignment_1.Outputbinaryfastafilebfa" sink="MAQOutputs_1.Input" />
                <connection source="SAMtoolsformatConversion_1.OutputSAMfile" sink="MAQOutputs_1.Input" />
                <connection source="SAMtoolsformatConversion_1.OutputSAMfile" sink="SAMtoolsOutputs_1.Input" />
                <connection source="SAMtoolsformatConversion_1.OutputFAIfile" sink="SAMtoolsOutputs_1.Input" />
                <connection source="SAMtoolsCleaningandPost-Processing_1.OutputSortedBAMfile" sink="SAMtoolsOutputs_1.Input" />
                <connection source="SAMtoolsCleaningandPost-Processing_1.OutputNo-DuplicatesBAMfile" sink="SAMtoolsOutputs_1.Input" />
                <connection source="SAMtoolsCleaningandPost-Processing_1.OutputBAIfile" sink="SAMtoolsOutputs_1.Input" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output" sink="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.InputTXTFile" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output_2" sink="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.Firstline" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output_3" sink="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.LastLine" />
                <connection source="MAQFastq2BfdConverter_1.Outputbinaryfastqfilebfq" sink="MAQMapper_1.InputSequenceBFQfie" />
                <connection source="MAQFasta2BfaConverter_1.Outputbinaryfastafilebfa" sink="MAQMapper_1.InputBFAReference" />
                <connection source="MAQSol2SangerConverter_1.Outputfastqfie" sink="MAQFastq2BfdConverter_1.Inputfastqfie" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output_4" sink="MAQIndexingAlignment_1.InputfastaReferencefie" />
                <connection source="MAQToolsControls_1.Output_2" sink="MAQIndexingAlignment_1.MAQRoutine" />
                <connection source="MAQToolsControls_1.Output_3" sink="MAQIndexingAlignment_1.MAQRoutine_2" />
                <connection source="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.OutputTXTfile" sink="MAQIndexingAlignment_1.InputtheSolexaTXTreadsequencefile" />
                <connection source="MAQToolsControls_1.Output_4" sink="MAQIndexingAlignment_1.MAQRoutine_3" />
                <connection source="MAQToolsControls_1.Output" sink="MAQIndexingAlignment_1.MAQRoutine_4" />
                <connection source="BowtieIndexing_1.OutputIndexfile" sink="BowtieAlignment_1.BowtieInputIndexGenome" />
                <connection source="MAQIndexingAlignment_1.Outputfastqfie" sink="BowtieIndexingAlignment_1.InputFQFile" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output_4" sink="BowtieIndexingAlignment_1.InputFQFile_2" />
                <connection source="SamToolsmaq2sam-long_1.OutputSAMfile" sink="SamToolsView_1.InputSAMFile" />
                <connection source="SamToolsFaidx_1.OutputFAIfile" sink="SamToolsView_1.InputFAIFile" />
                <connection source="SAMtoolsControls_1.Output_6" sink="SAMtoolsformatConversion_1.SAMtoolsRoutine" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output_4" sink="SAMtoolsformatConversion_1.InputReferenceFAFile" />
                <connection source="SAMtoolsControls_1.Output_8" sink="SAMtoolsformatConversion_1.SAMtoolsRoutine_2" />
                <connection source="BowtieIndexingAlignment_1.OutputMAPfile" sink="SAMtoolsformatConversion_1.InputSAMFile" />
                <connection source="SAMtoolsControls_1.Output_9" sink="SAMtoolsformatConversion_1.Flags" />
                <connection source="MAQIndexingAlignment_1.Outputmappingfilemap" sink="SAMtoolsformatConversion_1.InputMAPFile" />
                <connection source="SamToolsRemoveDuplicates_1.OutputNo-DuplicatesBAMfile" sink="SamToolsSort_1.InputunsortedBAMFile" />
                <connection source="SamToolsCamldMDtag_1.OutputNo-DuplicatesBAMfile" sink="SamToolsIndex_1.InputBAMFile" />
                <connection source="SamToolsSort_1.OutputSortedBAMfile" sink="SamToolsCamldMDtag_1.InputBAMFile" />
                <connection source="SAMtoolsControls_1.Output" sink="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine" />
                <connection source="SAMtoolsControls_1.Output_5" sink="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine_2" />
                <connection source="SAMtoolsControls_1.Output_4" sink="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine_3" />
                <connection source="SAMtoolsControls_1.Output_7" sink="SAMtoolsCleaningandPost-Processing_1.InputControlsFlags" />
                <connection source="InputSequenceDataandReferenceAtlas_1.Output_4" sink="SAMtoolsCleaningandPost-Processing_1.InputReferenceFasta" />
                <connection source="SAMtoolsControls_1.Output_2" sink="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine_4" />
                <connection source="SAMtoolsformatConversion_1.OutputBAMfile" sink="SAMtoolsCleaningandPost-Processing_1.InputBAMFile" />
                <connection source="SAMtoolsControls_1.Output_3" sink="SAMtoolsCleaningandPost-Processing_1.InputControlsFlags_2" />
                <connection source="BowtieIndexingAlignment_1.OutputMAPfile" sink="BowtieOutputs_1.Input" />
        </connections>
        <moduleGroup id="GroupedFoldedIntegratedBioinformaticsMAQSAMToolsBowtie_1" name="(Grouped/Folded) Integrated Bioinformatics (MAQ, SAMTools, Bowtie)" package="Integrated Bioinformatics" version="MAQ, SAMtools, Bowtie" description="This workflow contains the first step of a genomics data analysis protocol designed and implemented by Federica Torri, Fabio Macciardi and IvoDinov to process large number of sequence data outputted by the Illumina sequencing pipeline. See Step II analysis (GATK/QC/Cleaning) here.&#xA;&#xA;This protocol is implemented using the LONI Pipeline environment and includes the following types of computational resources:&#xA;&#xA;    * Mapping and Assembly with Qualities (MAQ)&#xA;    * Sequence Alignment and Mapping tools (SAMtools)&#xA;    * Bowtie&#xA;    * etc.&#xA;" posX="0" posY="0">
                <authors>
                        <author fullName="Federica Torri" email="" website="" />
                        <author fullName="Fabio Macciardi" email="" website="" />
                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov/" />
                </authors>
                <uri>http://wiki.loni.usc.edu/twiki/bin/view/CCB/PipelineWorkflows_BioinfoMAQ</uri>
                <dataModule id="MAQOutputs_1" name="MAQ Outputs" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="1241" posY="292" rotation="1" type="File" source="false" loopIndex="false" dirDump="true">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <fileTypes>
                                <filetype name="File" extension="" description="Any type of data file" />
                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                        </fileTypes>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010" />
                        </metadata>
                        <values>
                                <value>pipeline://pws.loni.usc.edu//ifs/tmp/pipelineTraining/{$username}/MAQ/results</value>
                        </values>
                        <input id="MAQOutputs_1.Input" name="Input" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="File" extension="" description="Any type of data file" />
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                        </fileTypes>
                                </format>
                        </input>
                </dataModule>
                <dataModule id="SAMtoolsOutputs_1" name="SAMtools Outputs" package="Samtools" posX="1233" posY="444" rotation="1" type="File" source="false" loopIndex="false" dirDump="true">
                        <fileTypes>
                                <filetype name="File" extension="" description="Any type of data file" />
                        </fileTypes>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010" />
                        </metadata>
                        <values>
                                <value>pipeline://pws.loni.usc.edu//ifs/tmp/pipelineTraining/{$username}/SAMtools/results</value>
                        </values>
                        <input id="SAMtoolsOutputs_1.Input" name="Input" required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="File" extension="" description="Any type of data file" />
                                        </fileTypes>
                                </format>
                        </input>
                </dataModule>
                <moduleGroup id="InputSequenceDataandReferenceAtlas_1" name="Input Sequence Data and Reference Atlas" icon="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" posX="42" posY="35">
                        <dataModule id="InputtheSolexaTXTreadsequencefile_1" name="Input the Solexa (TXT) read sequence file" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="95" posY="18" rotation="1" type="File" source="true" loopIndex="false">
                                <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                                <fileTypes>
                                        <filetype name="Text file" extension="txt" description="Text file" />
                                </fileTypes>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/test_data_2011/UCI_data_2011/test_pipeline/s_1_1_sequence.txt</value>
                                        <value>pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/test_data_2011/UCI_data_2011/test_pipeline/s_1_2_sequence.txt</value>
                                </values>
                                <output id="InputtheSolexaTXTreadsequencefile_1.Output" name="Output" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Text file" extension="txt" description="Text file" />
                                                </fileTypes>
                                        </format>
                                </output>
                        </dataModule>
                        <dataModule id="FirstLineIndex_1" name="First Line Index" package="LONI" version="1.0" description="Specify the first and last line indices of the sequence file that needs to be trunkated" posX="757" posY="32" rotation="1" type="Number" source="true" loopIndex="false">
                                <uri>http://wiki.loni.usc.edu</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>1</value>
                                </values>
                                <output id="FirstLineIndex_1.Output" name="Output" description="Specify the first and last line indices of the sequence file that needs to be trunkated" required="true" enabled="true" order="-1">
                                        <format type="Number" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="LastLineIndex_1" name="Last Line Index" package="LONI" version="1.0" description="Specify the first and last line indices of the sequence file that needs to be trunkated" posX="554" posY="33" rotation="1" type="Number" source="true" loopIndex="false">
                                <uri>http://wiki.loni.usc.edu</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>1000</value>
                                </values>
                                <output id="LastLineIndex_1.Output" name="Output" description="Specify the first and last line indices of the sequence file that needs to be trunkated" required="true" enabled="true" order="-1">
                                        <format type="Number" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="InputReferenceFastaFile_1" name="Input Reference Fasta File" package="MAQ" version="0.7.1" description="Enter any reference genome for the relevant species.&#xA;&#xA;E.g., For humans get HG18 in fasta format from UCSC or ENSEMBL.&#xA;&#xA;http://hgdownload.cse.ucsc.edu/downloads.html&#xA;&#xA;" posX="127" posY="221" rotation="1" type="File" source="true" loopIndex="false">
                                <uri>http://hgdownload.cse.ucsc.edu/goldenPath/hg18/bigZips/</uri>
                                <fileTypes>
                                        <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                </fileTypes>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/MAQ_BWA_2010/test_data/ref_chr2.fasta</value>
                                </values>
                                <output id="InputReferenceFastaFile_1.Output" name="Output" description="Enter any reference genome for the relevant species.&#xA;&#xA;E.g., For humans get HG18 in fasta format from UCSC or ENSEMBL.&#xA;&#xA;http://hgdownload.cse.ucsc.edu/downloads.html&#xA;&#xA;" required="true" enabled="true" order="-1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                                </fileTypes>
                                        </format>
                                </output>
                        </dataModule>
                        <output description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." link="InputtheSolexaTXTreadsequencefile_1.Output" id="InputSequenceDataandReferenceAtlas_1.Output" name="Output" order="0" />
                        <output description="Specify the first and last line indices of the sequence file that needs to be trunkated" link="FirstLineIndex_1.Output" id="InputSequenceDataandReferenceAtlas_1.Output_2" name="Output" order="3" />
                        <output description="Specify the first and last line indices of the sequence file that needs to be trunkated" link="LastLineIndex_1.Output" id="InputSequenceDataandReferenceAtlas_1.Output_3" name="Output" order="2" />
                        <output description="Enter any reference genome for the relevant species.&#xA;&#xA;E.g., For humans get HG18 in fasta format from UCSC or ENSEMBL.&#xA;&#xA;http://hgdownload.cse.ucsc.edu/downloads.html&#xA;&#xA;" link="InputReferenceFastaFile_1.Output" id="InputSequenceDataandReferenceAtlas_1.Output_4" name="Output" order="1" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:53:04 PDT 2011" />
                        </metadata>
                        <annotations>
                                <annotation name="Input the Reference Sequence" width="213" height="22" posX="140" posY="333" background="204,255,255,255" foreground="0,0,255,255">
                                        <styles>
                                                <style name="Input the Reference Sequence$0" fontSize="12" isBold="true" />
                                        </styles>
                                </annotation>
                                <annotation name="Input Raw Sequence Data and limits of the sub-sequence to analyze" width="510" height="22" posX="216" posY="151" background="204,255,255,255" foreground="0,0,255,255">
                                        <styles>
                                                <style name="Input Raw Sequence Data and limits of the sub-sequence to analyze$0" fontSize="12" isBold="true" />
                                        </styles>
                                </annotation>
                        </annotations>
                </moduleGroup>
                <moduleGroup id="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1" name="Input Sequence Data Pre-Processing (Sub-Sequence Extraction)" icon="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&#xA;AMeI44xPRFizAAAAAElFTkSuQmCC" rotation="1" posX="151" posY="215">
                        <module id="SubSequenceExtractor_1" name="SubSequence Extractor" package="LONI" version="1.0" description="FOR REAL SEQUENCE DATA ANALYSIS REMOVE THIS MODULE.&#xA;&#xA;This is a simple script (used for speedy validation) that extracts a continuous fragment of a sequence stored in a TXT file. It only leaves in the data stored between 2 user-specified lines minLine and maxLin.&#xA;&#xA;extract_lines_from_Textfile.sh 1 1000 s_1_2_sequence.txt s_1_2_short_seq_1_1000.txt" location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/Pipelines/extract_lines_from_Textfile.sh" sourceCode="" icon="iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAYAAACohjseAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ&#xA;bWFnZVJlYWR5ccllPAAAEt1JREFUeNrMWntsnWd9fr775dwvPr7bSRwbUtI0TWiBEpKuTVtgMOjY&#xA;rTBUMbYJ2qmABhraQIA6TaBKWzU0IToEhRK6ZYMVCoxBW1oaWkILHWmTNMZx7DiO78f2uX73b8/7&#xA;HYO0/0qTOJzqKLbPpe/z/X6/5/K+nxTHMX71kCQJF+Pxjtv/5upsyhpaXFh8TS6X21+v1T1ZU1Nb&#xA;R0a7VqsrRiqdWl1dXvn57PTkfWc85dmZJw85uIiP/4fpYgO87X2fOnDtq/d+vbpSVdqOh3qjjp6e&#xA;buiajhPHj6PVWEc6k4Nl2YjiiP9aa+v19S9PLq48ceTwvT/8rQW46/p3pkcH+78x9sode9LZjDIz&#xA;fQ6V7m68ePx5bB0dxfz5eeRyaVR6+nHqxZMIPBcjo2PwXAc9wzHcoI1Hv398AbL9b488eO8nf6sA&#xA;vu1P7uq3rNSh/sHhq8xUimBm4RMAJAXbRrZjbW01AWRYKSzMz6F/YBCZbAYp28T52TmsVpdx1TV7&#xA;MD57Cj8/8jPUmvXvrTbdO88d/U71QgGqF9oOVx/4w6s1Tf1PSdWL9UYTfQP9kBAhnc5iamqKbQj0&#xA;9/fBDwKcOnmS4PrYti247RZOLMxj9949EMt59LsP48zUBKrrdfi++0bdsr7AP//+ha5PvpAP7/+z&#xA;+24c3H7VQ+muXPHmt44inU1jda2GhYVlNJtNXPf618I0NVRXa1x0gKEtW5FKZ1CplKBwJn/37bcS&#xA;nIziQAlySmIlVxAHLrJpE5HT+p1d1+7/98sG8IY//2LZNqLPNT0nW+hN4wffHmdVXMRRiGajgS1b&#xA;t2B8fBLttgPPaSXAbTvFyvIiELAA/tOfHIXneWgur+Kmm/Zg7zXb8ZrX7set734XCqUCXC84eMtb&#xA;bn33ZQGoa8F7lXCtq91u4OmjE5hbX0axnMf2sTEUS0UscdFzs7OwLQvbSDIjW4dR7irDIshKVwG6&#xA;lcXg8DAGhoZw1VWvxuSpGNcfvB3XXPM65OwCRrd3I4hiGYpyzwc+fvfIpgK85g/u7lbC9Q+F7jrk&#xA;OIDT9DD6qkEopoGpyUls2TYCTZWwY+erkoGv15uJJLSbNbRbLQwNDxG4CctQ8OPHH8fZ6TOwTRXD&#xA;g0Oc1QjbR0tYXGrC8ULMzq0Y683wE5sKsLeSvwdR0+AYYdeuUWwdyOOWA1fCawWcoyrK5RIMM8V2&#xA;jaAbJsEYyGbSaLsRWs0GMpks/8chTGphodKH7p4+qLpNnTzJbw/hh0s4N7NAElYQ8Ttcx7n5tjs+&#xA;0r1pADXV3yVHLvZcO4IDr9+Prf1jmJ8mMZAyJVmFoauQpZjzFfDdEcGamJ9fQKWcJRHlcfLUaQwP&#xA;9SUXYqivhJXqOtu7i3NXhJm2sVZd5Pco6B/sSb5nefq0kSn23rYpAN94xwP5wHMGVFlGJa/h3NQ5&#xA;9PX2UPNk9PZ2J+QhyxKWFpdQyKcpSnQrps62G8VitUVGXUdfT4l1UsmsXmIGTF1CypThUDomTk6g&#xA;3ejHm9/8R3j/+96PrSOUGKcB6uuNmwLQzppvMUxdiSniq2sByWQuEfSpyV+iWa+hVK7gO995RLgG&#xA;TEycQavVJpuexvLyMmwD2LljhK5F4iw28b/PHcOjP/g+5uYW8Owzz7FaEslLoQEwSD59mDozjepK&#xA;jZJiwswXX1aL/sZCr+rKPngKAQALc6so2FZSpUy2wEU3OIOL0KQ6wT2PAAqr0oTr+qivr2FlaRkH&#xA;bthH7dMI+hSWlqrI5opwHJcM24WZs+egagYMu4Xvf/1bmJmeh85abxsmowaRuikAZcPeGdZC7Lyi&#xA;m7qn0Ft2kUlTXICLY88/J15HGAYIAw8Sn69901uwSB967Lmfkkk9PPXko2jUqlirr6Hlerj5pnck&#xA;gLO5FB5++EGEtDVPPCWjVmuSUcF51hDSr8ZhvDksKulGTxhGqJAcpsfPYu5cHU224QvHTiCT76Is&#xA;hKQVPhQVEed0YYWmu1JGtpihj9bQ4oVohiECxUA7kvHCiV/A9Rt44shjqLZcrLY8LK45cPyQFymE&#xA;EnmiWSAHjeymAFR1Ix0qJh557DhyPTZ6+m3IBKPo1DVqW0Ba57ISEom0FI7+5Gk8+cwTaPIzEgU8&#xA;lDW0A2qj46NNnTt67BgeOPwgnvnFMQSxhJhkFdENibYW/tUNgZYw7v5q6YP3fPrGS96iuq5EisZK&#xA;NCkFuoU5tp9p+FzIOtaWqWISmYQLFAIvk3wiVsqRUkhlMph94RmsLcwgxRGu0NHYfYOIdYMtHZJQ&#xA;ZmjhGgQoJZ9VFAn9XRUM9PSgMrwNdHz0qMrbhS+/pABTlr7mF7qtiDOxSmF3KN7r66chOKATt7hA&#xA;/hdxkaISsuhXatra3DS5yEU+YyFj2gSWhRdKCOsOpJCrb69D4fsifl5RVezZuwNBqKNVW0dsZjBy&#xA;ZT/Ovnji2UtewVRcP1tPFXtznDWdBHD65POoVefoLzl/rFggxD7iwmm5hFSo5IbG+jqiVh1Fht04&#xA;aGHyF8+jXjstgltSKYezqLKi5e4slldagNvCc0eegsrPZ+iAfK+OffvfVVt0jh265DOoGPqPDDvN&#xA;VGDgxHNHsV6dh03rdf78XOI3o9CHxxkLCFL8LCuiIlKSGmrVNUyfnoUTqnAJyqbe7bluH4VeR7Gr&#xA;RDOwDUWaA02KknglbFqW8cpiG794onr0M3cfCi45wMBtHDI0JXK8GNteuQPl3m1YWanSZzpsKVaO&#xA;pECSTeje5+8uWUJSNJi5CjNiAJ+SUGbo7aaQG4xOsxPjnGENaeFPFT3ZrwkYIrK0bP2cv21734Bs&#xA;pRfLM3O1TWHRT7/n4HQcS3N+IKNc6aJ4n6c1UxiDMp0ZJAvKlAcR00U29L12khC0dBH5cg/SqSzJ&#xA;pI2mI6FGwzDFlmxJQjtVmgKXQq8jklTOJ1BjaF6enkBreQHlke29m2a2ZVn/uXD/TqAmol3pG6YP&#xA;7WMranzqieEWJlk4HNd14TAAh/STBsklX+pGF022ZVqcWS15Cs2r8z2OwwvB7zBtmxcihaX1FsZP&#xA;HkO63IdsIbt5aSIK2v+gmVbUavts2TZnSOEXBTTaOheuQScLqkkVKRe+C592zXPadDsBJP7NNCzk&#xA;Uiby2TQMQ03e06CVc9pteJy9FFtXVRXQliLF9rWyJcFH+qYB/Of37n3RSudO6IIceodxlkZbT+Vg&#xA;F7ugWWmhColXFa0acGUu59MRWxe0ZoFwMcLKIelisigNQeAnQXh1dYVzWksMN3kKaVYSieiIHQRI&#xA;mwZQPBpOcDiVzuKKq/dhx+7rkgyYz9kw2Fq6LlPT5GRxsnAmbFWf1C/mMSD7CGEXO3uCJT26FPF6&#xA;IZ9l4m9hjSBNRiefPrZYLCVsGvIC5NOSt6kAVdpIT7axhWk+xcWJamVSbE0ClciGMmdJ/BsL4SeQ&#xA;KCEcFyHbUTiVxNLFcVKW/kGG37yOEoPJ6BC5hKmkv6cbFpNGRxdidkDj2U0FWFtcelpjrG80HURO&#xA;Dc21RQIU+yzMBhq9KUOvyvaTRYvFomoRgXK5dC2CXWNWUeLvpVKexCJD7H+cm1/B6YkpHHzbQfSO&#xA;jmF64gSTSsT4ZMVRY/7Lmwrwa3930DEUb3apIaM6dy7ZzyywRU2DoZWzo6cyUA0zIYtQJAw+BasK&#xA;jfTZcoKATNNIHFCaYr7ueEjnM/yeNr76L1/BCz96hF0RJx2ha/7SB955x1ObvvEbxfKMxTlM9e0k&#xA;tReQsTTYVpZEk4FBsjFoyjUyqsb2jelqOlWLkhkUrZmhqCuKAoX6KXbAJc6rxQsifKz4bIrgDP4O&#xA;r/njlz1KFwKQwXZS07UDikX3YeRQW2+S+SwSjcZ5C0S0SgAI/VeSlMBKsi2jZA4J1Hfgxkz7jRrC&#xA;dgtlVlJO5+lmXBgKzfzKXJJC9Hz/k5cFoO+6Exazj0ZHHXKGzp6dQ/fgIGyd4s4qqqyi3ubiQ4/x&#xA;qp4ki0jIhyR232jrPErDco0y4UH2GbkyJkq9AyjyIkV8bZ0mom/bWLy9Z+XyVLC21jglziOYdtlf&#xA;KianFqlftG3UQ0sk8gwThttMSCWi9rkiuCaGnMRh6NANA9m8hJnp8wnhZPzzmFqcocCryFHshQkf&#xA;GB09cee77xi/LACjSJrUpJAzRhqPBIlImPzlDIa2y2yzPGeOLRpUyKhxkhBadDSiLaNQSlrUpwEQ&#xA;bFspMB/SBJh2HtlyBSnqn0Utrc3PYGQ0/8ULWeMFAcxkzQVVikJFipV4w5mIgZs8NYlCKYsupgbY&#xA;1MW4wKvhCR9OgBp/bHd0kMTTbrN9Pf7carON22jU19HDC2XR2+4+eNPqmZPfvf+yHZ997s7rW6TD&#xA;ULCe2IkW+5pCukWqWJlfxPizzyBqV2myKQk2jbgmXg9YaCZ9hW2qEwj/nkpbMPN5yJYBjyZufvo4&#xA;CmUdr98tHfvMR++LLlsF//KzD6kkDIELkbDbGzZMPDtbFjHO/3ICKk14OseUkKJckGViceYQCDYN&#xA;YZBZZclHxlYQ04QLa5culDEy1kcHd+6fLvR88IIAZk0ryyUrkfCWJAmfAIMgTNyKFHbE3OdrrdUq&#xA;Fs43YadN9PQUOWdlhK4AGCTkxPgFzcxAYZzSSD6VoR4M9NQPH9h55xOXFaBtGT2aHEpS5CcntcmQ&#xA;UdTFnkyy8USQAenf98mcZNe1tTaWFyYpFyEGto+hd8t2DG7fimyGbWoC5WyAQtqryjj71wde9RcP&#xA;XYw7Li4IYKmY3dpoNJN2FBlJzKEksdXEnmjkEFhnb1MQiog/YkMq4kXwKRmnjp/A+PPHkDGAYiZN&#xA;wFfgqpuvBwv82HWjFwfcBZOMpSs7hImOmMqT/MNhlDlfsm6ycY1O5os7ZptDl1g1Ik+Sh3ifJHeq&#xA;LvKg2MVutmJxUUJcxMcFVVCXo2tdlibi14hIlAQbgUUUVBKRSkkqJlhIbALLkrgYBCw6WbhRQTBy&#xA;58xBvN5qelisht7FBPiyK3jXvYe5bmmvGyobVQrFXTdIci5nkj4s2YxSRXSi4RYVUxQ5sWgi7kcb&#xA;lRW/isMal1YuYPFajoTfCoC37N950AviohvIiQ3r3HvT2XaXkq37KDndVRXqn3iKRCGqJnV0MpnV&#xA;jRQh3ukx8Yeej5qTMi47wHu+8j9yGEl3z60KF0LS8OMEkLSRvqPQTXpVxJ+Ow4mSbYkkViQpPk5u&#xA;FhKgO3rZsW3iNS/SLj/Aga09X5pdbo8t1dhajouAhjoUIi92s4WAMx3EG5tFAnQcdURfzGmnnTuW&#xA;DhsVFO8MfLY029lS2q/+/Oevly8bwIefPXE3gb11Yq6OWr0Fv7UG36l3ch7nLvKaCWMKaOI/sVXY&#xA;ORANkn2ZBKiooEgVYq8m3jiw4Wuhx1SfNvuH9tz+0U0H+Pf/+nX98JFj3zu72PqriZk1aanKzNdi&#xA;YG02WEW6GDqT0G2QX9od0x1HnVArxF5oodgupBSEoprUx3ijVX9945ywe/z7AmW+HfZ+5KGnDn38&#xA;YgB8SXcbPvjY069ZbWkPLNf9rvnlNQbRJlxfEIMLr7GWRKCYVULQhMxnnIBDUlVxRi/e57I6UbIn&#xA;2tHChFpioVMBUmqErhzTx7Yr0TW2C4VKDqMDflzOto87tdPvfdPrPvwb5cGXfDvloe/9OB8o5t9W&#xA;m/F7ziy01VZtDY7bRpvxRuxo+07nPrQ46BCEFPuds7442Ngq9JMbf1xmPXHLiGDb5Hhto8JJc/Ii&#xA;6EwXBUtGys6i9xVXo/yK3SgUdPQUQvSUPF+V2l9gee+/cfc7xy8awP96/Cf7GpH51fHzbm5lnaDq&#xA;q+KOI3hsN3GDjwAWJPucTjJPYsHi4FrkPiQs2tkHbTTqiWULNzabks0lUWFstKg4JI2FnEjIaTH6&#xA;+reiMroLdqUfmmUTtIz+EoGWPWfqfO1L9x0e//TPvviJ2ssG+M1HjwzGRur+mWq4+8xSwAW2Gl5z&#xA;ddVxnXXPj9q+0/YF0NB3lTj0bCKyRLCgYNtSHFpx6Ktx6EpC7AXAOgPsr+KTT51LjqhZtQ4FRRuL&#xA;iJL9U5OxuSeXgp0toziwDVa+DINP1bSQz6kYqgQo5byarjgvzJx98a4/fePHTv9GAB868tN9qqx/&#xA;7PRC6+Tkgvf4uYX6D7/xyd97yedyu279sCxrVlGLXUuF10fCudJpN3azNcc4l2XP81OxJJfkOFAS&#xA;F5NsPXbcjKiiwtYuWlKyF5POVxiremEXKglILZ2FbpkEKKGXFS1l3VCWmo9qSvy1N+y47ZsvCeBn&#xA;v/Xf6l1ve3OAS/gYueH2vBo03yBJ4Q1cyRjLuYUrKFHyDVVsBjP1m3KErG3BSudgZQqwWFFTVJM/&#xA;qwRq2MyV+ZBAA+Sz4sTKmfXdxv0/evzb//ipD/5HdEnvun85j8Hr/1iV43jYCltXGEpo67KkpXW5&#xA;2zCMLtO0U3amYNv5Ytqw83aqVEnr6YytmVo6Z0XGQJerpOxINk3hItzpdn3xS2963Yd+vc3/fwIM&#xA;AMeI44xPRFizAAAAAElFTkSuQmCC" posX="78" posY="85">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </executableAuthors>
                                <license>LGPL</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://www.LONI.ucla.edu</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SubSequenceExtractor_1.OutputTXTfile" name="Output TXT file" description="Output of the shorter sequence" required="true" enabled="true" order="3">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                                                        <filetype name="Text file" extension="txt" description="Text file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="SubSequenceExtractor_1.InputTXTFile" name="Input TXT File" description="Input of a large TXT file storing a sequence" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Text file" extension="txt" description="Text file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="SubSequenceExtractor_1.Firstline" name="First line" description="lower limit of the lines to include in the shorter sequence." required="true" enabled="true" order="0">
                                        <format type="Number" cardinality="1" />
                                </input>
                                <input id="SubSequenceExtractor_1.LastLine" name="Last Line" description="upper limit line index" required="true" enabled="true" order="1">
                                        <format type="Number" cardinality="1" />
                                </input>
                        </module>
                        <output description="Output of the shorter sequence" link="SubSequenceExtractor_1.OutputTXTfile" id="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.OutputTXTfile" name="Output TXT file" order="3" />
                        <input description="Input of a large TXT file storing a sequence" link="SubSequenceExtractor_1.InputTXTFile" id="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.InputTXTFile" name="Input TXT File" order="2" />
                        <input description="lower limit of the lines to include in the shorter sequence." link="SubSequenceExtractor_1.Firstline" id="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.Firstline" name="First line" order="0" />
                        <input description="upper limit line index" link="SubSequenceExtractor_1.LastLine" id="InputSequenceDataPre-ProcessingSub-SequenceExtraction_1.LastLine" name="Last Line" order="1" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:52:45 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <moduleGroup id="MAQToolsControls_1" name="MAQ Tools Controls" icon="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&#xA;NFFFFFFIYUUUV//Z" rotation="1" posX="30" posY="630">
                        <dataModule id="MAQRoutineInputfastq2bfq_1" name="MAQ Routine Input (fastq2bfq)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" posX="5" posY="125" rotation="1" type="String" source="true" loopIndex="false">
                                <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>fastq2bfq</value>
                                </values>
                                <output id="MAQRoutineInputfastq2bfq_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="MAQRoutineInputfasta2bfa_1" name="MAQ Routine Input (fasta2bfa)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" posX="0" posY="442" rotation="1" type="String" source="true" loopIndex="false">
                                <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>fasta2bfa</value>
                                </values>
                                <output id="MAQRoutineInputfasta2bfa_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="MAQRoutineInputmap_1" name="MAQ Routine Input (map)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" posX="4" posY="251" rotation="1" type="String" source="true" loopIndex="false">
                                <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>map</value>
                                </values>
                                <output id="MAQRoutineInputmap_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="MAQRoutineInputsol2sanger_1" name="MAQ Routine Input (sol2sanger)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" posX="8" posY="20" rotation="1" type="String" source="true" loopIndex="false">
                                <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>sol2sanger</value>
                                </values>
                                <output id="MAQRoutineInputsol2sanger_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <output description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" link="MAQRoutineInputfastq2bfq_1.Output" id="MAQToolsControls_1.Output" name="Output" order="2" />
                        <output description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" link="MAQRoutineInputfasta2bfa_1.Output" id="MAQToolsControls_1.Output_2" name="Output" order="0" />
                        <output description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" link="MAQRoutineInputmap_1.Output" id="MAQToolsControls_1.Output_3" name="Output" order="1" />
                        <output description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" link="MAQRoutineInputsol2sanger_1.Output" id="MAQToolsControls_1.Output_4" name="Output" order="3" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:36:01 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <moduleGroup id="SAMtoolsControls_1" name="SAMtools Controls" icon="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" rotation="1" posX="35" posY="784">
                        <dataModule id="SAMtoolsRoutineInputsort_1" name="SAMtools Routine Input (sort)" package="MAQ" version="0.7.1" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="9" posY="363" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>sort</value>
                                </values>
                                <output id="SAMtoolsRoutineInputsort_1.Output" name="Output" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsRoutineInputrmdup_1" name="SAMtools Routine Input (rmdup)" package="MAQ" version="0.7.1" description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="10" posY="150" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>rmdup</value>
                                </values>
                                <output id="SAMtoolsRoutineInputrmdup_1.Output" name="Output" description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsControlsrmdup_1" name="SAMtools Controls (rmdup)" package="MAQ" version="0.7.1" description="-sS&#xA;&#xA;view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="6" posY="253" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>-sS</value>
                                </values>
                                <output id="SAMtoolsControlsrmdup_1.Output" name="Output" description="-sS&#xA;&#xA;view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsRoutineInputcalmd_1" name="SAMtools Routine Input (calmd)" package="MAQ" version="0.7.1" description="calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " posX="0" posY="469" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>calmd</value>
                                </values>
                                <output id="SAMtoolsRoutineInputcalmd_1.Output" name="Output" description="calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsRoutineInputindex_1" name="SAMtools Routine Input (index)" package="MAQ" version="0.1.10" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="51" posY="555" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>index</value>
                                </values>
                                <output id="SAMtoolsRoutineInputindex_1.Output" name="Output" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsRoutineInputfaidx_1" name="SAMtools Routine Input (faidx)" package="MAQ" version="0.7/1" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="24" posY="20" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>faidx</value>
                                </values>
                                <output id="SAMtoolsRoutineInputfaidx_1.Output" name="Output" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsCALMDFlags_1" name="SAMtools CALMD Flags" package="LONI" version="1.0" description="calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " posX="106" posY="656" rotation="1" type="String" source="true" loopIndex="false">
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>-b</value>
                                </values>
                                <output id="SAMtoolsCALMDFlags_1.Output" name="Output" description="calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsRoutineInputview_1" name="SAMtools Routine Input (view)" package="MAQ" version="0.7.1" description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="13" posY="868" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>view</value>
                                </values>
                                <output id="SAMtoolsRoutineInputview_1.Output" name="Output" description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <dataModule id="SAMtoolsviewflags_1" name="SAMtools view flags" package="MAQ" version="0.7.1" description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="100" posY="779" rotation="1" type="String" source="true" loopIndex="false">
                                <authors>
                                        <author fullName="Ivo D. Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                                </metadata>
                                <values>
                                        <value>-bht</value>
                                </values>
                                <output id="SAMtoolsviewflags_1.Output" name="Output" description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                        <format type="String" cardinality="1" />
                                </output>
                        </dataModule>
                        <output description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsRoutineInputsort_1.Output" id="SAMtoolsControls_1.Output" name="Output" order="2" />
                        <output description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsRoutineInputrmdup_1.Output" id="SAMtoolsControls_1.Output_2" name="Output" order="3" />
                        <output description="-sS&#xA;&#xA;view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsControlsrmdup_1.Output" id="SAMtoolsControls_1.Output_3" name="Output" order="1" />
                        <output description="calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " link="SAMtoolsRoutineInputcalmd_1.Output" id="SAMtoolsControls_1.Output_4" name="Output" order="0" />
                        <output description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsRoutineInputindex_1.Output" id="SAMtoolsControls_1.Output_5" name="Output" order="6" />
                        <output description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsRoutineInputfaidx_1.Output" id="SAMtoolsControls_1.Output_6" name="Output" order="5" />
                        <output description="calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " link="SAMtoolsCALMDFlags_1.Output" id="SAMtoolsControls_1.Output_7" name="Output" order="8" />
                        <output description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsRoutineInputview_1.Output" id="SAMtoolsControls_1.Output_8" name="Output" order="4" />
                        <output description="view -b -S -t&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SAMtoolsviewflags_1.Output" id="SAMtoolsControls_1.Output_9" name="Output" order="7" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:37:08 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <moduleGroup id="MAQIndexingAlignment_1" name="MAQ Indexing/Alignment" description="MAQ-based reference sequence indexing and alignment of data sequence to reference" icon="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&#xA;NFFFFFFIYUUUV//Z" rotation="1" posX="263" posY="480">
                        <module id="MAQFasta2BfaConverter_1" name="MAQ Fasta2Bfa Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.&#xA;&#xA;The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/MAQ_BWA_2010/maq" sourceCode="" icon="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&#xA;NFFFFFFIYUUUV//Z" posX="141" posY="389" rotation="1">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="" />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 2181060</citation>
                                        <citation>PMID: 18714091</citation>
                                </citations>
                                <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <input id="MAQFasta2BfaConverter_1.InputfastaReferencefie" name="Input fasta Reference fie" description="s_1_sequence.txt is the Solexa read sequence file.&#xA;&#xA;maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <output id="MAQFasta2BfaConverter_1.Outputbinaryfastafilebfa" name="Output binary fasta file (bfa)" description="Output (converted) binary fastq file (bfq) file" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ BFA" extension="bfa" description="MAQ bfa File type" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="MAQFasta2BfaConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                        </module>
                        <module id="MAQMapper_1" name="MAQ Mapper" package="MAQ" version="0.7.1" description="Usage:   maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]&#xA;&#xA;Options: -1 INT      length of the first read (&lt;=127) [0]&#xA;         -2 INT      length of the second read (&lt;=127) [0]&#xA;         -m FLOAT    rate of difference between reads and references [0.001]&#xA;         -e INT      maximum allowed sum of qualities of mismatches [70]&#xA;         -d FILE     adapter sequence file [null]&#xA;         -a INT      max distance between two paired reads [250]&#xA;         -A INT      max distance between two RF paired reads [0]&#xA;         -n INT      number of mismatches in the first 24bp [2]&#xA;         -M c|g      methylation alignment mode [null]&#xA;         -u FILE     dump unmapped and poorly aligned reads to FILE [null]&#xA;         -H FILE     dump multiple/all 01-mismatch hits to FILE [null]&#xA;         -C INT      max number of hits to output. &gt;512 for all 01 hits. [250]&#xA;         -s INT      seed for random number generator [random]&#xA;         -W          disable Smith-Waterman alignment&#xA;         -t          trim all reads (usually not recommended)&#xA;         -c          match in the colorspace&#xA;&#xA;Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.&#xA;&#xA;The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/MAQ_BWA_2010/maq" sourceCode="" icon="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&#xA;NFFFFFFIYUUUV//Z" posX="341" posY="198" rotation="1" advancedOptions="h_vmem=8">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="" />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 2181060</citation>
                                        <citation>PMID: 18714091</citation>
                                </citations>
                                <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <input id="MAQMapper_1.Options" name="Options" description="Options: -1 INT      length of the first read (&lt;=127) [0]&#xA;         -2 INT      length of the second read (&lt;=127) [0]&#xA;         -m FLOAT    rate of difference between reads and references [0.001]&#xA;         -e INT      maximum allowed sum of qualities of mismatches [70]&#xA;         -d FILE     adapter sequence file [null]&#xA;         -a INT      max distance between two paired reads [250]&#xA;         -A INT      max distance between two RF paired reads [0]&#xA;         -n INT      number of mismatches in the first 24bp [2]&#xA;         -M c|g      methylation alignment mode [null]&#xA;         -u FILE     dump unmapped and poorly aligned reads to FILE [null]&#xA;         -H FILE     dump multiple/all 01-mismatch hits to FILE [null]&#xA;         -C INT      max number of hits to output. &gt;512 for all 01 hits. [250]&#xA;         -s INT      seed for random number generator [random]&#xA;         -W          disable Smith-Waterman alignment&#xA;         -t          trim all reads (usually not recommended)&#xA;         -c          match in the colorspace&#xA;&#xA;" required="false" enabled="false" order="1">
                                        <format type="String" cardinality="1" />
                                </input>
                                <output id="MAQMapper_1.Outputmappingfilemap" name="Output mapping file (map)" description="Output mapping file&#xA;&#xA;maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]&#xA;" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="map" extension="map" description="fasta mapping file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="MAQMapper_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="MAQMapper_1.InputSequenceBFQfie" name="Input Sequence (BFQ) fie" description="maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]&#xA;" required="true" enabled="true" order="4">
                                        <format type="File" cardinality="2">
                                                <fileTypes>
                                                        <filetype name="MAQ BFQ" extension="bfq" description="MAQ binary fastq file (bfq)" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="MAQMapper_1.InputBFAReference" name="Input BFA Reference" description="maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]&#xA;" required="true" enabled="true" order="3">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ BFA" extension="bfa" description="MAQ bfa File type" />
                                                </fileTypes>
                                        </format>
                                </input>
                        </module>
                        <module id="MAQSol2SangerConverter_1" name="MAQ Sol2Sanger Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.&#xA;&#xA;The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualities are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/MAQ_BWA_2010/maq" sourceCode="" icon="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&#xA;NFFFFFFIYUUUV//Z" posX="0" posY="20">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="" />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 2181060</citation>
                                        <citation>PMID: 18714091</citation>
                                </citations>
                                <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <input id="MAQSol2SangerConverter_1.InputtheSolexaTXTreadsequencefile" name="Input the Solexa (TXT) read sequence file" description="s_1_sequence.txt is the Solexa read sequence file.&#xA;&#xA;maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Text file" extension="txt" description="Text file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <output id="MAQSol2SangerConverter_1.Outputfastqfie" name="Output fastq fie" description="Output (converted) sequence.fastq file" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="MAQSol2SangerConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                        </module>
                        <module id="MAQFastq2BfdConverter_1" name="MAQ Fastq2Bfd Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.&#xA;&#xA;The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/MAQ_BWA_2010/maq" sourceCode="" icon="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&#xA;NFFFFFFIYUUUV//Z" posX="178" posY="81" rotation="1">
                                <authors>
                                        <author fullName="Ivo DInov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="" />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 2181060</citation>
                                        <citation>PMID: 18714091</citation>
                                </citations>
                                <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <input id="MAQFastq2BfdConverter_1.Inputfastqfie" name="Input fastq fie" description="s_1_sequence.txt is the Solexa read sequence file.&#xA;&#xA;maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <output id="MAQFastq2BfdConverter_1.Outputbinaryfastqfilebfq" name="Output binary fastq file (bfq)" description="Output (converted) binary fastq file (bfq) file" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ BFQ" extension="bfq" description="MAQ binary fastq file (bfq)" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="MAQFastq2BfdConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                        </module>
                        <input description="s_1_sequence.txt is the Solexa read sequence file.&#xA;&#xA;maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" link="MAQFasta2BfaConverter_1.InputfastaReferencefie" id="MAQIndexingAlignment_1.InputfastaReferencefie" name="Input fasta Reference fie" order="4" />
                        <output description="Output (converted) binary fastq file (bfq) file" link="MAQFasta2BfaConverter_1.Outputbinaryfastafilebfa" id="MAQIndexingAlignment_1.Outputbinaryfastafilebfa" name="Output binary fasta file (bfa)" order="5" />
                        <input link="MAQFasta2BfaConverter_1.MAQRoutine" id="MAQIndexingAlignment_1.MAQRoutine" name="MAQ Routine" order="3" />
                        <output description="Output mapping file&#xA;&#xA;maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]&#xA;" link="MAQMapper_1.Outputmappingfilemap" id="MAQIndexingAlignment_1.Outputmappingfilemap" name="Output mapping file (map)" order="9" />
                        <input link="MAQMapper_1.MAQRoutine" id="MAQIndexingAlignment_1.MAQRoutine_2" name="MAQ Routine" order="8" />
                        <input description="s_1_sequence.txt is the Solexa read sequence file.&#xA;&#xA;maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" link="MAQSol2SangerConverter_1.InputtheSolexaTXTreadsequencefile" id="MAQIndexingAlignment_1.InputtheSolexaTXTreadsequencefile" name="Input the Solexa (TXT) read sequence file" order="1" />
                        <output description="Output (converted) sequence.fastq file" link="MAQSol2SangerConverter_1.Outputfastqfie" id="MAQIndexingAlignment_1.Outputfastqfie" name="Output fastq fie" order="2" />
                        <input link="MAQSol2SangerConverter_1.MAQRoutine" id="MAQIndexingAlignment_1.MAQRoutine_3" name="MAQ Routine" order="0" />
                        <output description="Output (converted) binary fastq file (bfq) file" link="MAQFastq2BfdConverter_1.Outputbinaryfastqfilebfq" id="MAQIndexingAlignment_1.Outputbinaryfastqfilebfq" name="Output binary fastq file (bfq)" order="7" />
                        <input link="MAQFastq2BfdConverter_1.MAQRoutine" id="MAQIndexingAlignment_1.MAQRoutine_4" name="MAQ Routine" order="6" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:39:14 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <moduleGroup id="BowtieIndexingAlignment_1" name="Bowtie Indexing/Alignment" description="Bowtie-based reference sequence indexing and alignment of data sequence to reference" icon="/9j/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAx&#xA;NDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy&#xA;MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAAUCABWAFYEASIAAhEBAxEBBCIA/8QAHwAAAQUB&#xA;AQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEG&#xA;E1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW&#xA;V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLD&#xA;xMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAA&#xA;AAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKR&#xA;obHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp&#xA;anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU&#xA;1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADgQBAAIRAxEEAAA/APn+iiigD5/ooooooooAKKKK&#xA;KKKKACiiiiiiigAooooooooAKKKKKKKKACiiiuw8E+CbfxZZard3Wrtp8Vg0KnbbecZDJv7b1xjZ&#xA;79a2dV+EyJarL4f8TWWqT/x2twn2OQ8gDZvYq3Uk5K9OMk4rY8KSyaT8LLOF5Yz/AGhezXqKpOVU&#xA;AQjdx1zG/rxj8KxkaU8cmnoebXxk6dVxS0R13gDwBf8AxA1Wezs7iK2jt4xJNNIpIUHgAAdST/Wt&#xA;/wAQfArxjodoLmCKDVVydyWJZnX32kAn8M16j+zv4ffTvBt1rMhQnVJv3YXqEjLLz/wLfx/jx7DX&#xA;OeLvhZ4l8HWQv7yK3u9O+UNd2UheNCxIAYEBh0HONvzAZycVxVe9aRd32mqstndzQOB0RuPxHQ1Q&#xA;1bQ/DHiK2W3vNOh0W+Xaseo6bb4TaCciSBSFOcn5hhshewwSxVHMac3aWh8Oa54O8QeG7W3udY0y&#xA;aziuOIzLgEnGcY6g/UVh1963um2OpQmG/sre6iIwUniVwR6YI9h+VeT+L/2f9C1WIz+HJDpV2AMR&#xA;MS8D/XOWU+4J+leKUV0/iTwDrfhexTUbtbW40yWRYor21uFeORypbAHDjGGByo5H0zzFI7009UfM&#xA;VFbnifwlrPhDU3sdXtTE4PySLykg9VPcdfyNYdFFen6X8IJI9Jsde8Q6zbWukXUEdwkdpukuJQwV&#xA;ggDAKpKk/NlgD2Irbi1y20/UWj8PabaaNFLiMyWyfvigCrgyHLfwKTgjLZY5JJIYVsTClo9woruf&#xA;AXwv1bx3cbreaO1sE5munRmC9eFHAZuOmeO+K+i/DXwi8IeHFhlGlQXl8iKGuLhS4LAAbgjEhSSM&#xA;8dCTjAwB5n4e8FeI/FYkbRdJnuo4875srHGCMZXexC7vmB25zg5xiup034P6iZAfEWs6VoUQZldJ&#xA;bhZpsbchlRDtIJ45cEYJx0z0GpvqO0mW8uJkbr5krN/M1j7sDgUPQ5P7R5vhR8j6dpOo6xOYNNsb&#xA;i7lVSzLDGXKgdScdB711elfCPxvqzL5ehXFupx811iIYOf73PY/p6jP2Fb2dtaBhbW8MIb7wjQLn&#xA;8qmrz/WtIudB1efTbsxtLDtO+JtyOrKGVlPoVIIzg88gHiiuw8f2cNxoWh6zFA4n/eWN3IqAISm1&#xA;oixA+8VZl5PIiGPumig9CnLnipHwZqulXuianPpuowGC7gbbJESCVOM9uOhFFesftD+G/wCz/Fdr&#xA;r0e4x6nHtkGzhXjCjrnqVI/7579iur8T2s9tew6Z55ni022isUk27d4iQITjJxkgnGT1rHidoThg&#xA;QK7G+a0ur6ae2Yy2s7efBIykFo5PnU4OD0YdazLmxUAlQPwqnHqfN1Krc2pdz3vwNpv9keBNDsSy&#xA;MYrOPcUQKCSuTwPc9ep6nk10FY/hO9t9R8I6Rd2snmQyWke1sEdFAPX3BrYpljdo6kFgMe9K13bu&#xA;xGRkGsa6maE7QPwrOXVJA+CjH6UnO2hEaPNqgooortdP1S2tYLqxvrVNQ0i9Ux3Nmx4J/hYHswIH&#xA;I5HB6gVzs3hHwRPdO8VtrUCOxYRpexlYx/dGYicDpySfc1FBcySyR5g2qXGS3HerEUgjb5qVzpji&#xA;K1KPKmYHizwdo/jTTBY6vb71Rt0cqHDxnvg+/cV5bL+zXpLSuYvEN6kZJ2q0CsQPQnIz+Ve40VJ4&#xA;j1u0SCw0nTojBZafbLBFFkFif4nbaACzHkkAZJzVTRdOnubhZ5lKrnIzTpp7W2bzp7UfMSRN5YbP&#xA;PXPUelOj1mGT/VXAJ7Y4/SiyvdiqynJXS1e7MPwj4XtPB3hy30WykklhhLN5kmNzFjkk4rcoorY1&#xA;adEg8kEFvbtXNu3zVNLM0pLDcc96gEcjtgLRJ3MqcVFahRRRWzY+FtR8d6BdaFpdxaQzJcw3hN07&#xA;KpVVkQ42qecyL2orU+Hy3sPiSdYFk3m0YkJ6b0opHrYevy00jx/9obTTe+EtLl82GLyr7bvkDk/N&#xA;G3A2g/3e47D8Suv+JP8AyLtv/wBfa/8AoD0VDoOpx6z4R0W6BjE0Ft9hnCIwCtD8q9epMZiJI4yT&#xA;06C4funPINZnhifRTpeuWHh37VLpOn6ikkN3dsPMlWaIKcgKMDdASO+HGQCDWlbwXl6+20tZp89P&#xA;LjLD8xW0XoeZjaTVd2W5lfA7WE1X4X2EQYmWwkktZcrgAg7lx6/I6/jmvRq8I/Zw1KMx+ItKiGYY&#xA;5Y7iJ3wHYNlTkZ9FXp69ele5zTxW8ZkmlSJB1Z2Cgfiao3tjHOMgc1jvaCAkkV2Vxol1Y+SdXvNO&#xA;0dZs+UdRvEh34xnaCcnGR+YrmJPFXgSxvozdX2o6xHtDlbK08qPOT8jGRlb8h3HPWolYdHC15aW0&#xA;JKK5PWPib4N0JmS+161EqsVMUWZXBHYhQcdO/Fed61+0fpUSTR6LpNzPKOI5bnCIffaDnH5f0q1o&#xA;uhfb7ebVtRuhpuhWGJZ7uQcMQeFX1JPGBnkgAEkCsaPX/A9xbXVxNqusRSRFTHAbBN82Tg7SJCvH&#xA;U7ivtk8Vx+veONe8R2j2V/dJ/Z5uRcx2kcSrHAwXYoTjKqFOMZxySckknnak9iGDpqKUldnpfjXx&#xA;pp3grRXvrx4nm48q2Mm15fmAO3g5xnP0rzY/tJ6L5AYaFfGXjKGRAO+cH8u3c+nPgWu+ItW8SajL&#xA;fateyXM8rbiWPC9cKo7KMnAHAyfWsuve10jT9S8K2+paPdtf6ZKNu502yW8vUxyKCcHkex4IJBBP&#xA;AXun/Z522/KQetY3g7xjf+DtVa5tlW4s5wEvLKQ/u7hPQ+jDJ2t1B9QSD6FLfeEfFc8s2i6tHpkg&#xA;yxtNZZYCQMcrJkofvYClg3BPTmh2aOWphJ0p81LZ9D7X8CeOtM8eaH9vsf3U8Z2XNq7AvC3bPqD2&#xA;PfB7ggdRXwz4Y8Uar4R1lNU0i5aCYDY4ABEiEglSCCMHA+nB6ivo7wv8ffDGs7YdWWXR7nH3pfnh&#xA;J44Djkd+oA461g2F1ICFk+at+2WMkMRVa48MarYQx3UlnI1rIgeO4ixJG6kZDB1yuCOQc0tj51zN&#xA;Fa20bSzysFRF6sT2ojoefWptvRHrFFU9N1Ww1i0W6067huoGAIeJsjnkfpzVt3WNGd2CqoySegFd&#xA;VovirTfBS3niPUra6ltWaOwT7Mis29g0h4ZlGAIx37iivMPig9xYa9F4bkIKaXGGYjBDzTKruwOA&#xA;cY2Jgk/6vPGSKKdz3MPQVOkos82+NPiO38PeGLBpY2lkmvAFRTjgI2Tn8R+dFeEfF/xani3x1NNa&#xA;T+dp1tGsNq2MArgFj68sT17YormtI8RavoKXiaXfSWyXkXlTqoBDDseQcMMnDDDDJwRk0678U+Id&#xA;Qsnsr3XtUubR8b4JryR0bBBGVJwcEA/hWTRSOiyOO07V9R0h5X06+uLRpozFIYZChZT2OKZd6nf6&#xA;ht+231zc7fu+dKz4+mTVWirF7f3mp3kl5f3c93dSY3zTyGR2wABljyeAB+FV6KKBh1ooooooooAK&#xA;KKKKKKKACiiitPT/ABHrmkWzW2m6zqNlAzl2itrp41LYAyQpAzgAZ9hWhH488TRXMFzHqZS4gVVS&#xA;ZYYw5CkEbm25bO0ZJzu5Bzk55yigVkT2t7dWUoltLma3kHR4pCh/MVqT+MfE1zY/YZ/EGpy2pABh&#xA;e6dlIHI4JrEoq/rWtah4h1afVdVuPtF7Pt8yXYq7sKFHCgDoB2oqhRQMdI7SOXbGT/dUAfkKKbRR&#xA;RRRQAUUUUUUUUAFFFFFFFFABRRRRRRRQAUUUUUUUUAFFFFFFFFABRRRX/9k=" rotation="1" posX="486" posY="412">
                        <module id="BowtieAlignment_1" name="Bowtie: Alignment" package="Bowtie" version="0.12.7" description="bowtie -S e_coli reads/e_coli_10000snp.fq ec_snp.sam &#xA;&#xA;Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.&#xA;&#xA;Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.&#xA;&#xA;/ifs/ccb/CCB_SW_Tools/others/Bioinformatics/Bowtie_CrossBow_2010/bowtie-0.12.7/bowtie e_coli reads/e_coli_1000.fq&#xA;" location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/others/Bioinformatics/Bowtie_CrossBow_2010/bowtie-0.12.7/bowtie" sourceCode="" icon="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" posX="372" posY="81" rotation="1">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19261174 
PMID: 19930550
PMID: 19289445</citation>
                                </citations>
                                <license>http://www.cbcb.umd.edu/research/SR-assembly.shtml 
open-source Artistic License</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://bowtie-bio.sourceforge.net/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="BowtieAlignment_1.OutputMAPfile" name="Output MAP file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="3">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="map" extension="map" description="fasta mapping file" />
                                                        <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="BowtieAlignment_1.BowtieInputIndexGenome" name="Bowtie Input Index Genome" description="http://bowtie-bio.sourceforge.net/tutorial.shtml&#xA;&#xA;/ifs/ccb/CCB_SW_Tools/others/Bioinformatics/Bowtie_CrossBow_2010/bowtie-0.12.7/bowtie e_coli reads/e_coli_1000.fq&#xA;&#xA;bowtie -t e_coli reads/e_coli_1000.fq e_coli.map&#xA;" required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools" extension="fai" description="FAI file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="BowtieAlignment_1.InputFQFile" name="Input FQ File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                                        <filetype name="Sequence FASTQ File Type" extension="fq" description="Sequence FASTQ File Type" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="BowtieAlignment_1.Options" name="Options" description="Also, the -t option instructs Bowtie to print timing statistics. The output should look something like this: &#xA;&#xA;-S outputs SAM file type" required="false" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                        <values>
                                                <value>-S</value>
                                        </values>
                                </input>
                        </module>
                        <module id="BowtieIndexing_1" name="Bowtie: Indexing" package="Bowtie" version="0.12.7" description="http://bowtie-bio.sourceforge.net/tutorial.shtml&#xA;&#xA;Building a new index&#xA;&#xA;The pre-built E. coli index included with Bowtie is built from the sequence for strain 536, known to cause urinary tract infections. We will create a new index from the sequence of E. coli strain O157:H7, a strain known to cause food poisoning. Download the sequence file by right-clicking this link and selecting &quot;Save Link As...&quot; or &quot;Save Target As...&quot;. The sequence file is named NC_002127.fna. When the sequence file is finished downloading, move it to the Bowtie install directory and issue this command:&#xA;&#xA; /applications/BOWTIE_0.10.0/bowtie-0.10.1/bowtie-build /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/&#xA;ref_chr2.fasta /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/chr_2_index &#xA;&#xA;&#xA;&#xA;Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.&#xA;&#xA;Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.&#xA;&#xA;/ifs/ccb/CCB_SW_Tools/others/Bioinformatics/Bowtie_CrossBow_2010/bowtie-0.12.7/bowtie e_coli reads/e_coli_1000.fq&#xA;" location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/others/Bioinformatics/Bowtie_CrossBow_2010/bowtie-0.12.7/bowtie-build" sourceCode="" icon="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" posX="74" posY="31" rotation="1">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19261174 
PMID: 19930550
PMID: 19289445</citation>
                                </citations>
                                <license>http://www.cbcb.umd.edu/research/SR-assembly.shtml 
open-source Artistic License</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://bowtie-bio.sourceforge.net/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="BowtieIndexing_1.OutputIndexfile" name="Output Index file" description="http://bowtie-bio.sourceforge.net/tutorial.shtml&#xA;&#xA;Building a new index&#xA;&#xA;The pre-built E. coli index included with Bowtie is built from the sequence for strain 536, known to cause urinary tract infections. We will create a new index from the sequence of E. coli strain O157:H7, a strain known to cause food poisoning. Download the sequence file by right-clicking this link and selecting &quot;Save Link As...&quot; or &quot;Save Target As...&quot;. The sequence file is named NC_002127.fna. When the sequence file is finished downloading, move it to the Bowtie install directory and issue this command:&#xA;&#xA; /applications/BOWTIE_0.10.0/bowtie-0.10.1/bowtie-build /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/&#xA;ref_chr2.fasta /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/chr_2_index &#xA;&#xA;&#xA;&#xA;Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.&#xA;&#xA;Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.&#xA;&#xA;/ifs/ccb/CCB_SW_Tools/others/Bioinformatics/Bowtie_CrossBow_2010/bowtie-0.12.7/bowtie e_coli reads/e_coli_1000.fq&#xA;" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools" extension="fai" description="FAI file" />
                                                        <filetype name="fasta.index" extension="fasta.index" description="fasta index file">
                                                                <need>fasta</need>
                                                        </filetype>
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="BowtieIndexing_1.InputFQFile" name="Input FQ File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                                        <filetype name="Sequence FASTQ File Type" extension="fq" description="Sequence FASTQ File Type" />
                                                        <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="BowtieIndexing_1.Options" name="Options" description="Also, the -t option instructs Bowtie to print timing statistics. The output should look something like this: " required="false" enabled="false" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                        </module>
                        <output description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." link="BowtieAlignment_1.OutputMAPfile" id="BowtieIndexingAlignment_1.OutputMAPfile" name="Output MAP file" order="2" />
                        <input description="samtools sort aln.bam aln_sorted.bam " link="BowtieAlignment_1.InputFQFile" id="BowtieIndexingAlignment_1.InputFQFile" name="Input FQ File" order="1" />
                        <input description="samtools sort aln.bam aln_sorted.bam " link="BowtieIndexing_1.InputFQFile" id="BowtieIndexingAlignment_1.InputFQFile_2" name="Input FQ File" order="0" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:40:47 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <moduleGroup id="SAMtoolsformatConversion_1" name="SAMtools format Conversion" icon="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" rotation="1" posX="636" posY="597">
                        <module id="SamToolsFaidx_1" name="SamTools: Faidx" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/samtools/samtools-0.1.10/samtools" sourceCode="" icon="/9j/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAx&#xA;NDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy&#xA;MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAAUCAAiAFYEASIAAhEBAxEBBCIA/8QAHwAAAQUB&#xA;AQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEG&#xA;E1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW&#xA;V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLD&#xA;xMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAA&#xA;AAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKR&#xA;obHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp&#xA;anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU&#xA;1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADgQBAAIRAxEEAAA/APn+iiut8K+EINc0y71O8u3g&#xA;tLZxG2xcsWPI7H37dutZ1asaUeaexrRozrS5Ibnz/RRXoXgH4Yr4v0S/1zUNYTS9Ks38tpTF5hLY&#xA;BPGRgAMOa5Kiuw0Pwfaax4lvrGPUFbT7ZN/2tW4wcEZ4PuOnXsKtaf4ASfxXqmkXVzJDHZoXDkYy&#xA;O5zg5xgjgcn06VlLF0otpvZX+RusDWdrdW191/8AI89or0nw58J18SePNU0Cy16GbT9PiWRtSgi3&#xA;q+4KVAXd15IPP8JqbQvg3c6t4/1vwvcaqLX+zEEn2j7Pv81WI2ELuGMg56nHSuFort7L4eyzeLLz&#xA;Sricx21qu5pehIPA7H+IEZxzjpzw+4+Gl+qapLbytJHZzGNB5efM4z1zxyCM47Z4zS+u0E7OXb8d&#xA;h/2diLaRPMKK9M0T4NalqvxA1bwxPfC2i0xQ8l55JYMrYMeFyOWBz14weuKkv/gZ4jgttYubF0vI&#xA;rC48mFBGyyXQGMsi8jAye/8ACa4WitseENfNl9sGlzGALu3DHT6Zzn2602z8J67f2Yu7bTZZLcjO&#xA;/IAx68nitvbU7X5l95h9WrXtyP7meX0V0UXgLxXPov8Aa8WgXzWGzzBKIuq/3gOpHvjFJpngTxTr&#xA;OlnUtO0K9ubPnEqR8Njrt7t+GaxqK66fwXI3hjTL+zS4lvrud4Xt2wAm1cnsMckDn+tYGp6LqOjN&#xA;GuoWzQNJnaGYEnGM9D7ilCtTnpF9/wANB1MNVprma079DnqK9Fu/hk5+HPh7XdNF7d6vqt21ubNU&#xA;BAA8zoAM5Hl85Pr0rjtc8O6x4avEtNZ0+ayndN6rKPvL0yCODVCiiitTAy6KKKK7/wCH96un20sk&#xA;XiC2sZGkxNbXa7o5Y/8Adxyff9K4Cisq9FVoOD2f9dTfD1vYz57XCvcfgfdvp2mTXEfi3TbKNrv/&#xA;AErTL4ABowB+8ViwIY8j045rw6ivZNQ8UeFbO11W6tWWYXU6p5NtIEkKL35zwTjHstTjxL4eur9d&#xA;US/ghlutMaKVZJBvVwMAH37/AFJrxSiuH+y6dvid/XyS/RHd/a0735UfU9/4v+HfhLT9U1ewmiuB&#xA;q92qywabIqyEoMbgAQQuQxz33e9X4/EvhWXWX8W2ut2EEt9opR4pLhFkVlIZdwz975iP+Aivkmiv&#xA;aP8AhMNEl0vTbr7fEl/dmFLtCeYhH6n0OAT7j3qv/b2lXv8AwlNr/bMMPn3SzWzmUgFQhztI9znt&#xA;3rx+imssprZv+mmvusl6B/as9E4n1kPiT4d+xaBqMF7YxajrUttFenzVDRIoLNv54AOV5/vVTi8U&#xA;2GsWnjTS4PF1tYTDUA9rctcgBIdsZbYc8glZBx3NfLNFe2J4j0Q3lrrS65CltFp5gey3HczFAMbe&#xA;nUE/8C9esFh4h0m7fw9qq67HZQ6cjfabNiQ0hLE9OhznH/1q8aopPK6drcz7dNrNdvN67ieaSe8f&#xA;xPrn/hLtDTVIfFSeL7OPw/HpfknSxINxl3bgwTOd2PlxjPFVdL8U6Jf2/hnW7DxTZaVpGnW0i3ul&#xA;vKELEoAqlc/wkHsfbrXyhRXsFv4o05tP0xrPU7OCZL64laObpsYAAEcEZwef8a5L4g3Olz3ViNNn&#xA;SRgjGdY5WdEc44XPbiuMorelgoUp88W+v4tv9SK+Yyq0nTcd/wDhz6w03xrot7puiXGn6zpVo8mo&#xA;3c3kXcgU+WzTEAjOUJ3Kc+/evJ/jxfaNfeJtOfS9RF3MtsRcrFcGaKI7sgKeg6tkD24FeT0UUUUV&#xA;2HnBRRRRRRRQAUUUUUUUUAFFFFFFFFABRRRRRRRQAUUUUUUUUAFFFFFFFFABRRRX/9k=" posX="97" posY="8" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsFaidx_1.OutputFAIfile" name="Output FAI file" description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1" base="Input Reference FA File">
                                                <fileTypes>
                                                        <filetype name="SAMtools" extension="fai" description="FAI file" />
                                                </fileTypes>
                                                <transform order="0" operation="Append">.fai</transform>
                                        </format>
                                </output>
                                <input id="SamToolsFaidx_1.SAMtoolsRoutine" name="SAMtools Routine" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsFaidx_1.InputReferenceFAFile" name="Input Reference FA File" description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                                </fileTypes>
                                        </format>
                                </input>
                        </module>
                        <module id="SamToolsView_1" name="SamTools: View" package="SamTools" version="0.1.9" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;http://bioinf.scri.ac.uk/tablet/assembly-conversion.shtml&#xA;&#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/samtools/samtools-0.1.10/samtools" sourceCode="" icon="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" posX="459" posY="65" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsView_1.OutputBAMfile" name="Output BAM file" description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" required="true" enabled="true" order="3" switch="-o" switchSpaced="true">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="SamToolsView_1.SAMtoolsRoutine" name="SAMtools Routine" description=" samtools view -b -S -t reference.fasta.fai -o assembly.bam assembly.sam&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsView_1.InputSAMFile" name="Input SAM File" description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" required="true" enabled="true" order="4">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="SamToolsView_1.InputFAIFile" name="Input FAI File" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools" extension="fai" description="FAI file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="SamToolsView_1.Flags" name="Flags" description="Optional samtools VIEW flags (e.g., -bht)" required="false" enabled="true" order="1">
                                        <format type="String" cardinality="1" />
                                </input>
                        </module>
                        <module id="SamToolsmaq2sam-long_1" name="SamTools: maq2sam-long" package="SamTools" version="0.1.9" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/samtools/samtools-0.1.10/misc/maq2sam-long.csh" sourceCode="" icon="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" posX="99" posY="229" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsmaq2sam-long_1.OutputSAMfile" name="Output SAM file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="SamToolsmaq2sam-long_1.InputMAPFile" name="Input MAP File" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="0">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="map" extension="map" description="fasta mapping file" />
                                                </fileTypes>
                                        </format>
                                </input>
                        </module>
                        <output description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" link="SamToolsFaidx_1.OutputFAIfile" id="SAMtoolsformatConversion_1.OutputFAIfile" name="Output FAI file" order="4" />
                        <input description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SamToolsFaidx_1.SAMtoolsRoutine" id="SAMtoolsformatConversion_1.SAMtoolsRoutine" name="SAMtools Routine" order="2" />
                        <input description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" link="SamToolsFaidx_1.InputReferenceFAFile" id="SAMtoolsformatConversion_1.InputReferenceFAFile" name="Input Reference FA File" order="3" />
                        <output description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" link="SamToolsView_1.OutputBAMfile" id="SAMtoolsformatConversion_1.OutputBAMfile" name="Output BAM file" order="7" />
                        <input description=" samtools view -b -S -t reference.fasta.fai -o assembly.bam assembly.sam&#xA;&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SamToolsView_1.SAMtoolsRoutine" id="SAMtoolsformatConversion_1.SAMtoolsRoutine_2" name="SAMtools Routine" order="5" />
                        <input description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" link="SamToolsView_1.InputSAMFile" id="SAMtoolsformatConversion_1.InputSAMFile" name="Input SAM File" order="8" />
                        <input description="Optional samtools VIEW flags (e.g., -bht)" link="SamToolsView_1.Flags" id="SAMtoolsformatConversion_1.Flags" name="Flags" order="6" />
                        <output description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." link="SamToolsmaq2sam-long_1.OutputSAMfile" id="SAMtoolsformatConversion_1.OutputSAMfile" name="Output SAM file" order="1" />
                        <input description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." link="SamToolsmaq2sam-long_1.InputMAPFile" id="SAMtoolsformatConversion_1.InputMAPFile" name="Input MAP File" order="0" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:41:59 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <moduleGroup id="SAMtoolsCleaningandPost-Processing_1" name="SAMtools Cleaning and Post-Processing" description="Duplicate removal, sorting, MD-tagging, indexing" icon="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" rotation="1" posX="948" posY="766">
                        <module id="SamToolsSort_1" name="SamTools: Sort" package="SamTools" version="0.1.9" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/samtools/samtools-0.1.10/samtools" sourceCode="" icon="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" posX="229" posY="153" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsSort_1.OutputSortedBAMfile" name="Output (Sorted) BAM file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                                <transform order="0" operation="Subtract">.bam</transform>
                                        </format>
                                </output>
                                <input id="SamToolsSort_1.SAMtoolsRoutine" name="SAMtools Routine" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsSort_1.InputunsortedBAMFile" name="Input (unsorted) BAM File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                        </format>
                                </input>
                        </module>
                        <module id="SamToolsIndex_1" name="SamTools: Index" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/samtools/samtools-0.1.10/samtools" sourceCode="" icon="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" posX="548" posY="557" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsIndex_1.OutputBAIfile" name="Output BAI file" description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1" base="Input BAM File">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM Index File" extension="bai" description="SAMtools BAM Index File" />
                                                </fileTypes>
                                                <transform order="0" operation="Append">.bai</transform>
                                        </format>
                                </output>
                                <input id="SamToolsIndex_1.SAMtoolsRoutine" name="SAMtools Routine" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsIndex_1.InputBAMFile" name="Input BAM File" description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" required="true" enabled="true" order="1">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                        </format>
                                </input>
                        </module>
                        <module id="SamToolsCamldMDtag_1" name="SamTools: Camld (MD tag)" package="SamTools" version="0.1.9" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/Pipelines/samtools_calmd_pipeline.sh" sourceCode="" icon="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" posX="368" posY="355" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsCamldMDtag_1.OutputNo-DuplicatesBAMfile" name="Output No-Duplicates BAM file" description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" required="true" enabled="true" order="4">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="SamToolsCamldMDtag_1.SAMtoolsRoutine" name="SAMtools Routine" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsCamldMDtag_1.InputBAMFile" name="Input BAM File" description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                                <transform order="0" operation="Replace">.bam:.bam</transform>
                                        </format>
                                </input>
                                <input id="SamToolsCamldMDtag_1.InputControlsFlags" name="Input Controls (Flags)" description="samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " required="false" enabled="true" order="1">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsCamldMDtag_1.InputReferenceFasta" name="Input Reference Fasta" description="http://samtools.sourceforge.net/samtools.shtml&#xA;&#xA;calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. &#xA;&#xA;" required="true" enabled="true" order="3">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                                </fileTypes>
                                        </format>
                                </input>
                        </module>
                        <module id="SamToolsRemoveDuplicates_1" name="SamTools: Remove Duplicates" package="SamTools" version="0.1.9" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. &#xA;&#xA;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " location="pipeline://pws.loni.usc.edu//ifs/ccb/CCB_SW_Tools/BioinformaticsGenetics/samtools/samtools-0.1.10/samtools" sourceCode="" icon="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" posX="0" posY="20" rotation="1" executableVersion="r783">
                                <authors>
                                        <author fullName="Ivo Dinov" email="" website="http://wiki.loni.usc.edu/~dinov" />
                                </authors>
                                <executableAuthors>
                                        <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                                </executableAuthors>
                                <citations>
                                        <citation>PMID: 19505943</citation>
                                </citations>
                                <license>http://sourceforge.net/projects/samtools/
BSD</license>
                                <tag>bioinformatics genomics</tag>
                                <uri>http://sourceforge.net/projects/samtools/</uri>
                                <metadata>
                                        <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                                </metadata>
                                <output id="SamToolsRemoveDuplicates_1.OutputNo-DuplicatesBAMfile" name="Output No-Duplicates BAM file" description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" required="true" enabled="true" order="3">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                        </format>
                                </output>
                                <input id="SamToolsRemoveDuplicates_1.SAMtoolsRoutine" name="SAMtools Routine" description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                        <format type="String" cardinality="1" />
                                </input>
                                <input id="SamToolsRemoveDuplicates_1.InputBAMFile" name="Input BAM File" description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" required="true" enabled="true" order="2">
                                        <format type="File" cardinality="1">
                                                <fileTypes>
                                                        <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file" />
                                                </fileTypes>
                                        </format>
                                </input>
                                <input id="SamToolsRemoveDuplicates_1.InputControlsFlags" name="Input Controls (Flags)" description="rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;OPTIONS:&#xA;-s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;-S &#x9;Treat paired-end reads and single-end reads. " required="true" enabled="true" order="1">
                                        <format type="String" cardinality="1" />
                                </input>
                        </module>
                        <output description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." link="SamToolsSort_1.OutputSortedBAMfile" id="SAMtoolsCleaningandPost-Processing_1.OutputSortedBAMfile" name="Output (Sorted) BAM file" order="4" />
                        <input description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SamToolsSort_1.SAMtoolsRoutine" id="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine" name="SAMtools Routine" order="3" />
                        <output description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" link="SamToolsIndex_1.OutputBAIfile" id="SAMtoolsCleaningandPost-Processing_1.OutputBAIfile" name="Output BAI file" order="10" />
                        <input description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SamToolsIndex_1.SAMtoolsRoutine" id="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine_2" name="SAMtools Routine" order="9" />
                        <output description="Output index file (fai) file&#xA;index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. &#xA;" link="SamToolsCamldMDtag_1.OutputNo-DuplicatesBAMfile" id="SAMtoolsCleaningandPost-Processing_1.OutputNo-DuplicatesBAMfile" name="Output No-Duplicates BAM file" order="8" />
                        <input description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SamToolsCamldMDtag_1.SAMtoolsRoutine" id="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine_3" name="SAMtools Routine" order="5" />
                        <input description="samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " link="SamToolsCamldMDtag_1.InputControlsFlags" id="SAMtoolsCleaningandPost-Processing_1.InputControlsFlags" name="Input Controls (Flags)" order="6" />
                        <input description="http://samtools.sourceforge.net/samtools.shtml&#xA;&#xA;calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;OPTIONS:&#xA;-e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;-u &#x9;Output uncompressed BAM&#xA;-b &#x9;Output compressed BAM&#xA;-S &#x9;The input is SAM with header lines&#xA;-C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;-r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. &#xA;&#xA;" link="SamToolsCamldMDtag_1.InputReferenceFasta" id="SAMtoolsCleaningandPost-Processing_1.InputReferenceFasta" name="Input Reference Fasta" order="7" />
                        <input description="&#xA;COMMANDS AND OPTIONS&#xA;&#xA;    view &#x9;samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]&#xA;&#xA;    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.&#xA;&#xA;    OPTIONS:&#xA;    -b &#x9;Output in the BAM format.&#xA;    -f INT &#x9;Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]&#xA;    -F INT &#x9;Skip alignments with bits present in INT [0]&#xA;    -h &#x9;Include the header in the output.&#xA;    -H &#x9;Output the header only.&#xA;    -l STR &#x9;Only output reads in library STR [null]&#xA;    -o FILE &#x9;Output file [stdout]&#xA;    -q INT &#x9;Skip alignments with MAPQ smaller than INT [0]&#xA;    -r STR &#x9;Only output reads in read group STR [null]&#xA;    -R FILE &#x9;Output reads in read groups listed in FILE [null]&#xA;    -S &#x9;Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.&#xA;    -c &#x9;Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.&#xA;    -t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.&#xA;    -u &#x9;Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.&#xA;&#xA;    tview &#x9;samtools tview &lt;in.sorted.bam&gt; [ref.fasta]&#xA;&#xA;    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.&#xA;&#xA;    mpileup &#x9;samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]&#xA;&#xA;    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.&#xA;    -C INT &#x9;Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]&#xA;    -e INT &#x9;Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]&#xA;    -f FILE &#x9;The reference file [null]&#xA;    -g &#x9;Compute genotype likelihoods and output them in the binary call format (BCF).&#xA;    -h INT &#x9;Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]&#xA;    -l FILE &#x9;File containing a list of sites where pileup or BCF is outputted [null]&#xA;    -o INT &#x9;Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]&#xA;    -P STR &#x9;Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]&#xA;    -q INT &#x9;Minimum mapping quality for an alignment to be used [0]&#xA;    -Q INT &#x9;Minimum base quality for a base to be considered [13]&#xA;    -r STR &#x9;Only generate pileup in region STR [all sites]&#xA;    -u &#x9;Similar to -g except that the output is uncompressed BCF, which is preferred for piping.&#xA;&#xA;    reheader &#x9;samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;&#xA;&#xA;    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.&#xA;&#xA;    sort &#x9;samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;&#xA;&#xA;    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).&#xA;&#xA;    OPTIONS:&#xA;    -o &#x9;Output the final alignment to the standard output.&#xA;    -n &#x9;Sort by read names rather than by chromosomal coordinates&#xA;    -m INT &#x9;Approximately the maximum required memory. [500000000]&#xA;&#xA;    merge &#x9;samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]&#xA;&#xA;    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.&#xA;&#xA;    OPTIONS:&#xA;    -h FILE &#x9;Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)&#xA;    -R STR &#x9;Merge files in the specified region indicated by STR&#xA;    -r &#x9;Attach an RG tag to each alignment. The tag value is inferred from file names.&#xA;    -n &#x9;The input alignments are sorted by read names rather than by chromosomal coordinates&#xA;    -u &#x9;Uncompressed BAM output&#xA;&#xA;    index &#x9;samtools index &lt;aln.bam&gt;&#xA;&#xA;    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.&#xA;&#xA;    idxstats &#x9;samtools idxstats &lt;aln.bam&gt;&#xA;&#xA;    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.&#xA;&#xA;    faidx &#x9;samtools faidx &lt;ref.fasta&gt; [region1 [...]]&#xA;&#xA;    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.&#xA;&#xA;    fixmate &#x9;samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.&#xA;&#xA;    rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;    OPTIONS:&#xA;    -s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;    -S &#x9;Treat paired-end reads and single-end reads.&#xA;&#xA;    calmd &#x9;samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;&#xA;&#xA;    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.&#xA;&#xA;    OPTIONS:&#xA;    -e &#x9;Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.&#xA;    -u &#x9;Output uncompressed BAM&#xA;    -b &#x9;Output compressed BAM&#xA;    -S &#x9;The input is SAM with header lines&#xA;    -C INT &#x9;Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]&#xA;    -r &#x9;Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.&#xA;&#xA;    pileup &#x9;samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;&#xA;&#xA;    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.&#xA;&#xA;    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.&#xA;&#xA;    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.&#xA;&#xA;    OPTIONS:&#xA;    -B &#x9;Disable the BAQ computation. See the mpileup command for details.&#xA;    -c &#x9;Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.&#xA;    -C INT &#x9;Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]&#xA;    -d INT &#x9;Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]&#xA;    -f FILE &#x9;The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.&#xA;    -g &#x9;Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.&#xA;    -i &#x9;Only output pileup lines containing indels.&#xA;    -I INT &#x9;Phred probability of an indel in sequencing/prep. [40]&#xA;    -l FILE &#x9;List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option&#xA;    -m INT &#x9;Filter reads with flag containing bits in INT [1796]&#xA;    -M INT &#x9;Cap mapping quality at INT [60]&#xA;    -N INT &#x9;Number of haplotypes in the sample (&gt;=2) [2]&#xA;    -r FLOAT &#x9;Expected fraction of differences between a pair of haplotypes [0.001]&#xA;    -s &#x9;Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.&#xA;    -S &#x9;The input file is in SAM.&#xA;    -t FILE &#x9;List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.&#xA;    -T FLOAT &#x9;The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]&#xA;&#xA;SAM FORMAT&#xA;&#xA;    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:&#xA;&#xA;        Col&#x9;Field&#x9;Description&#xA;        1&#x9;QNAME&#x9;Query (pair) NAME&#xA;        2&#x9;FLAG&#x9;bitwise FLAG&#xA;        3&#x9;RNAME&#x9;Reference sequence NAME&#xA;        4&#x9;POS&#x9;1-based leftmost POSition/coordinate of clipped sequence&#xA;        5&#x9;MAPQ&#x9;MAPping Quality (Phred-scaled)&#xA;        6&#x9;CIAGR&#x9;extended CIGAR string&#xA;        7&#x9;MRNM&#x9;Mate Reference sequence NaMe (‘=’ if same as RNAME)&#xA;        8&#x9;MPOS&#x9;1-based Mate POSistion&#xA;        9&#x9;ISIZE&#x9;Inferred insert SIZE&#xA;        10&#x9;SEQ&#x9;query SEQuence on the same strand as the reference&#xA;        11&#x9;QUAL&#x9;query QUALity (ASCII-33 gives the Phred base quality)&#xA;        12&#x9;OPT&#x9;variable OPTional fields in the format TAG:VTYPE:VALUE&#xA;&#xA;    Each bit in the FLAG field is defined as:&#xA;&#xA;        Flag&#x9;Chr&#x9;Description&#xA;        0x0001&#x9;p&#x9;the read is paired in sequencing&#xA;        0x0002&#x9;P&#x9;the read is mapped in a proper pair&#xA;        0x0004&#x9;u&#x9;the query sequence itself is unmapped&#xA;        0x0008&#x9;U&#x9;the mate is unmapped&#xA;        0x0010&#x9;r&#x9;strand of the query (1 for reverse)&#xA;        0x0020&#x9;R&#x9;strand of the mate&#xA;        0x0040&#x9;1&#x9;the read is the first read in a pair&#xA;        0x0080&#x9;2&#x9;the read is the second read in a pair&#xA;        0x0100&#x9;s&#x9;the alignment is not primary&#xA;        0x0200&#x9;f&#x9;the read fails platform/vendor quality checks&#xA;        0x0400&#x9;d&#x9;the read is either a PCR or an optical duplicate&#xA;&#xA;EXAMPLES&#xA;&#xA;    o &#x9;Import SAM to BAM when @SQ lines are present in the header:&#xA;&#xA;    samtools view -bS aln.sam &gt; aln.bam&#xA;&#xA;    If @SQ lines are absent:&#xA;&#xA;    samtools faidx ref.fa&#xA;    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam&#xA;&#xA;    where ref.fa.fai is generated automatically by the faidx command.&#xA;&#xA;    o &#x9;Attach the RG tag while merging sorted alignments:&#xA;&#xA;    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt&#xA;    samtools merge -rh rg.txt merged.bam ga.bam 454.bam&#xA;&#xA;    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.&#xA;&#xA;    o &#x9;Call SNPs and short indels for one diploid individual:&#xA;&#xA;    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf&#xA;&#xA;    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.&#xA;&#xA;    o &#x9;Call SNPs and short indels for multiple diploid individuals:&#xA;&#xA;    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf&#xA;    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf&#xA;&#xA;    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.&#xA;&#xA;    o &#x9;Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:&#xA;&#xA;    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf&#xA;    bcftools view -bl sites.list all.bcf &gt; sites.bcf&#xA;    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs&#xA;    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs&#xA;    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs&#xA;    ......&#xA;&#xA;    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.&#xA;&#xA;    o &#x9;Dump BAQ applied alignment for other SNP callers:&#xA;&#xA;    samtools calmd -br aln.bam &gt; aln.baq.bam&#xA;&#xA;    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " link="SamToolsRemoveDuplicates_1.SAMtoolsRoutine" id="SAMtoolsCleaningandPost-Processing_1.SAMtoolsRoutine_4" name="SAMtools Routine" order="0" />
                        <input description="Input Reference BFA file&#xA;&#xA;maq match reads-1.map ref.bfa reads-1.bfq&#xA;    Align the reads to the reference" link="SamToolsRemoveDuplicates_1.InputBAMFile" id="SAMtoolsCleaningandPost-Processing_1.InputBAMFile" name="Input BAM File" order="2" />
                        <input description="rmdup &#x9;samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;&#xA;&#xA;Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).&#xA;&#xA;OPTIONS:&#xA;-s &#x9;Remove duplicate for single-end reads. By default, the command works for paired-end reads only.&#xA;-S &#x9;Treat paired-end reads and single-end reads. " link="SamToolsRemoveDuplicates_1.InputControlsFlags" id="SAMtoolsCleaningandPost-Processing_1.InputControlsFlags_2" name="Input Controls (Flags)" order="1" />
                        <metadata>
                                <data key="__creationDateKey" value="Thu Mar 24 11:43:25 PDT 2011" />
                        </metadata>
                </moduleGroup>
                <dataModule id="BowtieOutputs_1" name="Bowtie Outputs" package="Bowtie" posX="1231" posY="162" rotation="1" type="File" source="false" loopIndex="false" dirDump="true">
                        <fileTypes>
                                <filetype name="File" extension="" description="Any type of data file" />
                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                        </fileTypes>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010" />
                        </metadata>
                        <values>
                                <value>pipeline://pws.loni.usc.edu//ifs/tmp/pipelineTraining/{$username}/Bowtie/results</value>
                        </values>
                        <input id="BowtieOutputs_1.Input" name="Input" required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="File" extension="" description="Any type of data file" />
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                        </fileTypes>
                                </format>
                        </input>
                </dataModule>
                <metadata>
                        <data key="__creationDateKey" value="Thu Mar 17 14:53:07 PDT 2011" />
                </metadata>
                <annotations>
                        <annotation name="7. Results" width="120" height="32" posX="1313" posY="156" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="7. Results$0" fontSize="20" isBold="true" />
                                </styles>
                        </annotation>
                        <annotation name="6. Sequence&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xA;Post-Processing&#xD;&#xD;" width="185" height="55" posX="1117" posY="885" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="6. Sequence&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xA;Post-Processing&#xD;&#xD;$0" fontSize="20" isBold="true" />
                                </styles>
                        </annotation>
                        <annotation name="5. Converter" width="145" height="32" posX="719" posY="553" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="5. Converter$0" fontSize="20" isBold="true" />
                                </styles>
                        </annotation>
                        <annotation name="4. Independent&#xD;&#xD;&#xD;&#xD;&#xA;MAQ &amp; Bowtie&#xD;&#xD;&#xD;&#xD;&#xA;Sequence&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD; Alignment&#xD;&#xD;" width="234" height="78" posX="604" posY="1309" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="4. Independent&#xD;&#xD;&#xD;&#xD;&#xA;MAQ &amp; Bowtie&#xD;&#xD;&#xD;&#xD;&#xA;Sequence&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD; Alignment$0" fontSize="20" isBold="true" />
                                        <style name="&#xD;&#xD;$61" fontSize="12" />
                                </styles>
                        </annotation>
                        <annotation name="4. Independent&#xD;&#xD;&#xD;&#xD;&#xA;MAQ &amp; Bowtie&#xD;&#xD;&#xD;&#xD;&#xA;Sequence&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD; Alignment&#xD;&#xD;" width="234" height="78" posX="250" posY="340" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="4. Independent&#xD;&#xD;&#xD;&#xD;&#xA;MAQ &amp; Bowtie&#xD;&#xD;&#xD;&#xD;&#xA;Sequence&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD; Alignment$0" fontSize="20" isBold="true" />
                                        <style name="&#xD;&#xD;$61" fontSize="12" />
                                </styles>
                        </annotation>
                        <annotation name="1. Input Data &amp; Reference" width="280" height="32" posX="175" posY="17" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="1. Input Data &amp; Reference$0" fontSize="20" isBold="true" />
                                </styles>
                        </annotation>
                        <annotation name="2. Process&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xA;Tool&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;s&#xD;&#xD;&#xD;&#xD;&#xA;Controls  " width="120" height="78" posX="0" posY="528" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="  $54" fontSize="12" />
                                        <style name="2. Process&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xA;Tool&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;s&#xD;&#xD;&#xD;&#xD;&#xA;Controls$0" fontSize="20" isBold="true" />
                                </styles>
                        </annotation>
                        <annotation name="Documentaiton: http://wiki.loni.usc.edu/twiki/bin/view/CCB/PipelineWorkflows_BioinfoMAQ" width="859" height="28" posX="578" posY="56" background="102,102,204,51" foreground="0,0,255,255">
                                <styles>
                                        <style name="http://wiki.loni.usc.edu/twiki/bin/view/CCB/PipelineWorkflows_BioinfoMAQ$15" fontSize="17" isBold="true" />
                                        <style name="Documentaiton: $0" fontSize="17" />
                                </styles>
                        </annotation>
                        <annotation name="3. Pre-Processing" width="197" height="32" posX="243" posY="191" background="204,255,255,255" foreground="0,0,255,255">
                                <styles>
                                        <style name="3. Pre-Processing$0" fontSize="20" isBold="true" />
                                </styles>
                        </annotation>
                </annotations>
        </moduleGroup>
</pipeline>

