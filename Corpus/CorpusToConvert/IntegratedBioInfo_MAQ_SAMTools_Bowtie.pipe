<?xml version="1.0" encoding="UTF-8"?>
<pipeline version=".2">
        <connections>
                <connection source="SAMtoolsRoutineInputfaidx_1.Output" sink="SamToolsFaidx_1.SAMtoolsRoutine"/>
                <connection source="InputReferenceFastaFile_1.Output" sink="SamToolsFaidx_1.InputReferenceFAFile"/>
                <connection source="SAMtoolsRoutineInputsort_1.Output" sink="SamToolsSort_1.SAMtoolsRoutine"/>
                <connection source="SamToolsRemoveDuplicates_1.OutputNo-DuplicatesBAMfile" sink="SamToolsSort_1.InputunsortedBAMFile"/>
                <connection source="MAQMapper_1.Outputmappingfilemap" sink="SamToolsmaq2sam-long_1.InputMAPFile"/>
                <connection source="SAMtoolsRoutineInputview_1.Output" sink="SamToolsView_1.SAMtoolsRoutine"/>
                <connection source="BowtieAlignment_1.OutputMAPfile" sink="SamToolsView_1.InputSAMFile"/>
                <connection source="SamToolsmaq2sam-long_1.OutputSAMfile" sink="SamToolsView_1.InputSAMFile"/>
                <connection source="SamToolsFaidx_1.OutputFAIfile" sink="SamToolsView_1.InputFAIFile"/>
                <connection source="SAMtoolsviewflags_1.Output" sink="SamToolsView_1.Flags"/>
                <connection source="SamToolsFaidx_1.OutputFAIfile" sink="SAMtoolsOutput_1.Input"/>
                <connection source="SamToolsSort_1.OutputSortedBAMfile" sink="SAMtoolsOutput_1.Input"/>
                <connection source="SamToolsIndex_1.OutputBAIfile" sink="SAMtoolsOutput_1.Input"/>
                <connection source="SamToolsCamldMDtag_1.OutputNo-DuplicatesBAMfile" sink="SAMtoolsOutput_1.Input"/>
                <connection source="SAMtoolsRoutineInputrmdup_1.Output" sink="SamToolsRemoveDuplicates_1.SAMtoolsRoutine"/>
                <connection source="SamToolsView_1.OutputBAMfile" sink="SamToolsRemoveDuplicates_1.InputBAMFile"/>
                <connection source="SAMtoolsControlsrmdup_1.Output" sink="SamToolsRemoveDuplicates_1.InputControlsFlags"/>
                <connection source="SAMtoolsRoutineInputindex_1.Output" sink="SamToolsIndex_1.SAMtoolsRoutine"/>
                <connection source="SamToolsCamldMDtag_1.OutputNo-DuplicatesBAMfile" sink="SamToolsIndex_1.InputBAMFile"/>
                <connection source="SubSequenceExtractor_1.OutputTXTfile" sink="MAQSol2SangerConverter_1.InputtheSolexaTXTreadsequencefile"/>
                <connection source="MAQRoutineInputsol2sanger_1.Output" sink="MAQSol2SangerConverter_1.MAQRoutine"/>
                <connection source="MAQSol2SangerConverter_1.Outputfastqfie" sink="MAQFastaqOutput_1.Input"/>
                <connection source="MAQFastq2BfdConverter_1.Outputbinaryfastqfilebfq" sink="MAQBFQOutput_1.Input"/>
                <connection source="InputReferenceFastaFile_1.Output" sink="MAQFasta2BfaConverter_1.InputfastaReferencefie"/>
                <connection source="MAQRoutineInputfasta2bfa_1.Output" sink="MAQFasta2BfaConverter_1.MAQRoutine"/>
                <connection source="MAQMapper_1.Outputmappingfilemap" sink="MAQMAPOutput_1.Input"/>
                <connection source="MAQFasta2BfaConverter_1.Outputbinaryfastafilebfa" sink="MAQRefBFAOutput_1.Input"/>
                <connection source="MAQSol2SangerConverter_1.Outputfastqfie" sink="MAQFastq2BfdConverter_1.Inputfastqfie"/>
                <connection source="MAQRoutineInputfastq2bfq_1.Output" sink="MAQFastq2BfdConverter_1.MAQRoutine"/>
                <connection source="MAQRoutineInputmap_1.Output" sink="MAQMapper_1.MAQRoutine"/>
                <connection source="MAQFastq2BfdConverter_1.Outputbinaryfastqfilebfq" sink="MAQMapper_1.InputSequenceBFQfie"/>
                <connection source="MAQFasta2BfaConverter_1.Outputbinaryfastafilebfa" sink="MAQMapper_1.InputBFAReference"/>
                <connection source="InputtheSolexaTXTreadsequencefile_1.Output" sink="SubSequenceExtractor_1.InputTXTFile"/>
                <connection source="FirstLineIndex_1.Output" sink="SubSequenceExtractor_1.Firstline"/>
                <connection source="LastLineIndex_1.Output" sink="SubSequenceExtractor_1.LastLine"/>
                <connection source="SAMtoolsRoutineInputcalmd_1.Output" sink="SamToolsCamldMDtag_1.SAMtoolsRoutine"/>
                <connection source="SamToolsSort_1.OutputSortedBAMfile" sink="SamToolsCamldMDtag_1.InputBAMFile"/>
                <connection source="SAMtoolsCALMDFlags_1.Output" sink="SamToolsCamldMDtag_1.InputControlsFlags"/>
                <connection source="InputReferenceFastaFile_1.Output" sink="SamToolsCamldMDtag_1.InputReferenceFasta"/>
                <connection source="BowtieIndexing_1.OutputIndexfile" sink="BowtieAlignment_1.BowtieInputIndexGenome"/>
                <connection source="MAQSol2SangerConverter_1.Outputfastqfie" sink="BowtieAlignment_1.InputFQFile"/>
                <connection source="InputReferenceFastaFile_1.Output" sink="BowtieIndexing_1.InputFQFile"/>
                <connection source="SamToolsmaq2sam-long_1.OutputSAMfile" sink="MAQSAMtoolsOutputs_1.Input"/>
        </connections>
        <icons>
                <icon id="2" value="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"/>
                <icon id="3" value="iVBORw0KGgoAAAANSUhEUgAAAFYAAABWCAYAAABVVmH3AAAzbElEQVR42u18B1gcR7ZuT55hmCEM
OeeMJBRQzjkiJCFAAomcQSIKEDmDEMo5Z6e112+Td+1r7/Wmu9fetXed08q2ZFlWBkSc8L9TNaDV
auW3+96973v3vo/WV+qhp7un6q9z/vOf6qoWhLFtbBvbxraxbWwb28a2sW1sG9vGtrFtbBvbxrax
bWwb28a2JzbRY+WJPx87/L2X/f0f33/+0/bfW5d/UBHR/8k9/pnr/8l6i/7BzwqChVQQJLQXCwr2
p7WlWqqSSAS5IKjoG0Elk1qw41qtJdsplUq5RC6TCPSdiC6T013EEgWdLRHzOyoU/DaCRm3J/hSP
/pDke/Z/VzPxSJEIo/Uylyc6X/LYPURPa534ifI911O1pexvFbWL9jJWYfa3WmXB9lI6hx0XyUUy
aracrhELFko12ytE/MbsBLGglMrY/ZQKkUQh5UcVdFQi6Ng5YjEHi4Emlpp/mFfJykbLPknpl+Sj
FbOgy1gHENICPy4SLCy1Gn5LpVzBKiuRSaQiyeONeAKMp4IifsoF/1FgRd9/vc5Ky9upkIhFMmYY
EjEHiAHKGswAk4slDEi5rcaGTEqsJEDlbo6uFiPAWqnVagWdL1JJZIJsFKQRS7PmxqtUyeneagJG
OQIYq5hcyYCViXklbXS2o3ZuxaxWSj9K1432MO9lmUis0tDf5gr9PZhPc7WnWq34n7PYf+CT3/v1
iBEJOo2Ge6CM/iSLY6AKltQmCfdakZXE7HkS83ViQaOxEhj8UqlckFuo+M1Yu60t+X0s6R5Sbtqs
VzRqrdnaVGYfJsCVxANqqc5a4F0gp5PZP9YR5CBqtWa0crKRHpYqJFI5u7mEUwh3LdvvBVX0VIr/
e6sTfb/FiYR/DJzk+6x75DMDlNEeIzMluaxGoXp0/gidCSLatFqtoFApbSw1VuSdYhUV5uKWDGdW
T4lMaiU1G5KI3UOwkWsJNzEdkqrFEpnom7v3ld0wBtwYHmz9YrD7xEcP78++DYTcBfweAF6ClnWv
2EwWdHOdTsc4RjRSaRlZrmzkM6vPPwwQkn/GrZ/SM4/+fArgzArlT5QRavu7ezN3d7C2ZfGEGQj3
MjpsTR6rHjlHJJbLpASeSGBfSSkW0ckDgNBtHLJkn71CAwWpUsF5QaVQmn9HTd9YCAqllNiBHFt2
B8aJP/nzH37Z9aPnsfcXP8Trd756+Mbdr/UfYQDv9d//+AZMxfcAJ0FOd1SrhSFAcfPObR8DoBmt
7Ih72CnUFt8LyOMgSB9ruOQfgfskhTz2negxUJWPlVFgH3WE+KlcIhExL2U+z4Kx+RyZoKZgLBNU
7CY91MZ7MNjfwtBcKiu+eHin/JvBHjt2FvsBpaVaxVjEzlZH5k5HFYJMya4WiBdvAdvOvf0rxO9r
woq2it4FDUVY3FgyELOnXt/66ku4/Kd/G3r12mevXwey/nDrG+/r+r7I+zB1Xh/o/dHXfd3PPQRi
iY8p1FFhtME53EyUIs5MLAqKmZeMlKcDK/rflYqPAat4CrCSx0H9G5OWWrI6eoUE03GxlsUSAlD1
1cN7474Z7o38xvDQ95qpL/Ar9La9cfXPqz4aun3jlc//+NxL7/0G5371E9O+ly69SufUCholkwXq
RxW3JnuVs7uJZDLBylL0x6EHzzX+8mUs21fTM3/vTkxtLzZMay0yzGsvw7jCJAQmr9evrC/BkvJ8
1L14wXTx7V/p3+q+gc/QN3AVQzeuQV/32XCPWLAma7WQ8Vs/Dq5kBFDlSHkasP80uKLvt1jFSPkb
UNkH2cgXqpGiJjdXsSghFu4AkmsYivx0qPvVq3g48Nb9a6+8+tX7V3/4yVtofOm0Ma61dGDFziz4
xy1GRFp0v1fUbCwrSMbbt778gaBisYdc31ItyJjFq+mnbTV2LJZrvyPeeB+4u+ZYM9Zc7sLk/eX6
4PYCBDfnIbgmE8HlqQgq3org7VsQWpCI8PwEhGTGPphekoK17eV3i545evf4O28886/d1579FIMr
r8NkTz9IoZN+VMZ+1YIBK7WRW1J3igVLQa4YBZQCqGKUp5lt014p44LnHyQCYiZ+ZKMnSbQWahWp
EomCB2ZBzNQKfafiLs20jK1K9NHAHQmBZn0Vg02vXvv44PMfvLXv2K9+fnLXT194veaFM7dyjnci
qnYbpuZt0gdtXYXApNUISl2NwPQ1CMqgz1lreAnNWItJKetw5lc/uy1oSAFoldbsR62YclIKMpWI
utEuIEB4d6h73o8HbgxO6Sg2zDrT2B9+uBwerdnwbMyEV00avCqT4V22FV4lifAuZiUBfrSPqM/C
tJYCTKxKR0RFqiF6fw2af/ni0Etfv3fvnaG7C27AOPemcdCDWy7lEwSujc7CSsksVyGTi+Vy+Shc
KldX18djkuKfyLCkj33mp3KLoeMiBXmhVHDsI4Ohhko/H37g/k7vt0ve+O6z16qeP4E5hSl9Iakb
4LclasgzYVWff8q64bDcTRhfsBlB2THwSFnZ501gemeuhlc27XNWwztvzaPin7MGU3I2Dnb+9Jmh
dx98M1+wIjStLVlOQFYjYv4gVQhkO+8Ye7a1vfvag3UvHUTIgRKDQ2Mq7OqT4ViXDOeqrXCt2ALX
8kQ4l22GU+kmOFKxLdo45FWXdj+sY9tweMe2h6GNOYhozOud1Urc3FaGtFNd+B9ff4ir0P/iunFo
Hm8kKQqyKQ4yt6YREx2Ju/yfjDCxtLT8fln614MSX38/fr1MpWRsoyKVb0sK1JLxAAVa4Uv04bWv
P9h55q3XHq5tLLrnEbMAc8vTTVNKkjGhIh3BZSnwK0yEb+Fm+BWRsRRtgndhHDwK1sM1dy3c8qLg
nr8W7gVrRspquOWvglcuAb5lKRaXputvABWcWliqwLiWhzvG6BYKiz8Y75dXvPkiQtty9ZNP1cCj
M/uhdVUC7KoIyPIEuOzYxEF1KI2FbWkctLT3aM2Ce3u2waszj3UGpp+uw7yzTT3TD1SYxtVlY3pD
wUBkaVpfXGct3vjuKj4Z7v0dybclXFVYWSoFrdpMjJS8qGytWFVkNvZ2zMWl3zOc8dRkXyqnlJMF
ZekIcdNHojbtv3Vfiym9ePD5+WVp5Lrrhsflx2HqzjR4pq8enN1W2D++OW8ooCHb4FGZbHIqijfY
5EYPajJXD2oyVpg0GcvgVBANp21RcCYwedm2io6thGP+Crhkr4B3ygr9uNTovp9f++CVL/TdDE4r
Rx8PgQcQLv9d7Ox/8/D6tysPVD+Yf7IadhXxd0XZS2C3Iw5OO2LhVhoP9+KNcC6OhX3JBlhRsSzd
ANv6JKPr7tyhgKNlhpBj5X3hxyuNE0/X6Kedqcec0w2I3FuG+QeqMLe1eCA4K/ZB9pl9+OW9a6b3
TQ+PfWHqC6egoSNuUnAwZESXNhrW4xKJ2Z1l3ztoMvKHlUbLP5J4l/MOspAqvhi8r/sGpsbf9t8w
5V3ab4rYvtkwoWzLkFX8PNgnLzVIoqfCtzgOcw5W6CfsLUUwFb9dBXCvT6f2boJNYYzBtnC9wb5o
vVFXEAW7/NVwyCcw81bCIW85HHKWwT57MZwzliAwdx2mEHWUXDjQTR35k5Fo7CZYmDMMxefdt878
6Oq7Q4kXdsGvMrE7sCUD4V35cC6JgVtRDLy2mwv77EjHbHfEQFMRA0VZDAhYjL9QhynPtgxHXGoY
Dj9TjbATlQg9Wj44+UR1vy9xtNP2WMzbvxOTq7MxeUd6/85fPNv/2oNr+FTfc/E2hmPNGklMlMSj
q5Y7kVYjfzJDexJYcjyb29/eFF2/+e1sEu3zP+3+LuZTU88LL3z+NmZWpHX75axDWGUS1FsWwDZr
JVncul512pJe78oEzDpWpY88Uz8ccYbqfHyn3rdrO6c9TclGWOSvgTpnBazyVkOXtwr2eSvgkLuC
g+qYtRSOmYvglL4Yluum3Zm4fTPW1m3H2w+u/0TqbGumA7VZkmi7Mfyw9pmjxjk1GRhXk6y3zl4O
29yVg64Fa+FB/OJNXOOTF03grod7GVludTwc6hIQcKB4IPBwmT7wWDmCGJjnajHhchPGX2pEyNma
QTquDyCKWPjcbng3ZfV670wZ1mVFI7Q6ExGkJppePI+rw93/ehuGuKsP74aSDmZiW8WTzKcMZz6J
raezq0DAht+49Z0L8bflRz3fvbH/tRexsCob40sTEbgjYcAyfanJtTweoqR5g0LibGgIKHn64sHQ
rm2YQJQ37lwDxp9tIGPYCb+92+HWnAGHnZthXxZjtCFg7XJXclCdc5j7L4dr1hK4ZiyGW/pS+OdG
G4Iy15H8Wt/3CXq6yUAsWOJP//MoInzWc2toc2v50JzaTHjkrNH7kqs70U3cs1fCg4pnzioOsHvR
enhWxsOzLhHuzSnw3JUL/4MlppCTOxF2pmYo/GITJjzb1jfuSgtCLjQg/GLLoOu+QoScqIZrWy53
u8lHa+BVlz5MGhmzy9JNy4vTja99/dHDmzDmv/vtVzOk9lZM+5p9nEc2getfycggiBlgsyZWCGIl
jBB6jEObPh+498bZd/4Fi5ry+gKKNlBdowe8yLOETVON9sSN1jlLB4QNk6DMWAS74ugeb/LKiRcb
EXG53TT5Socx4nyTMfRohcmjIweOVVtgW7yBW6ztCLBORAUutHfJWQq3bCqZy+CeucrgunUZZpck
G3f9+DJuGPty2DCMIFaohTsG/cxffvOFYUZxCgLzY+CdH4WQ4hij1cZpBtekhdQ7SzlpO+9YD5ea
TfBo2AIfUgtejWnw3p0P7wNFCDxeQRZah7ALzQi72IbQyx0Iu7ILAWdb4XeyHn7HauF/pBp++yvg
1VkEn92FGNdVjMkNeZhannZvfFY8Ln/4b3c+GOze9OVAN/W6VC2IzGNIGoWaxLBUxOUZ/SNANUq5
2kLC03GZBUvHv+i5e/y1+39BRF3ygG9zAmyro2BVsdyk274QNqkzYbM5Err4qbDcOAWquGmwowDk
05pOXlbF6zv5+T2YSl41/lQDfPYUwaU+DY6VidAVrYPt9jXQUbCyyV0GW4o7rOiyFxHPLoUuc4nR
fusihGRF92QebsI36MsmTSvmSusvg309DS9fGZ5emTEYXLoZVptnGxwS58I9aX6fR/ICuKRTDxes
gG3ZWthWbYRDTTw8qrfCsyaJW6zH3gL4Hi5FwMkqBFHQCj7XgqDz7VR2IeTibgQRuIGnmhF0qhGB
BLDvwXL4HyhD2KEdCKjLwJzdO0wRFemmyYXJePnq+598OPAg5Vv9kEpubSOXSJWkdS2IepUykqZy
LiEkjCb4oKXUQqIWuh8OObzfe/fVpNPt8K/drFeVLDHZNUebhORwvVXWDGg3R8AmehzsoifAZsMU
WCXMoiC8Fn6duRh3oQXhz3RyYCOf34uI8y1Eb2VwbkiDTVkcAbuBA2tL8ooBa0VBixXrnEUcYL+d
8UMBpJACM6MMC4qTKAv7SxOXXYJSpfkGKFrdWAZXyi4cM1cN2mYs7nFKXWRy3DIPbqnm6GdD0VBb
tApWO9bBfudGuFNvepK29e4YAfZQCVntToScaUAoVS70AlnthQ6EX+pECIEcfKYVYeeonG5C0LFq
BB+pRPjRSkw+UtnvW52MGbuL9ZOrMvQzSlPx5oNrH3+FoaL37txI+eDmdTeZnQ3L4wULZwcLsa2V
mlAWsRSUJAHLGJWkVRf+5u71P67bXUF0tWZAm7UAmqzZFHDmwyZhCjTRYVCvDIY2ajy08TNgQx7o
UsPjAyZcaefATnx2NyKf6cIUqncwdbxzXSq0hRugo5hit20NpwNbslCbrMXmkr2QAyuKi4Rd2tJb
gVlrMZ908Qd9Nz8RNBIlG+cSnv3T789P35EF722xQ0T0kG2Zc882dSHcs5brXdOWwClzKayptyy3
r4CmdC3syjfCs4Iyr51b4dGcCdeObHjt2QZ/ytRCTtUh/HwrcWsbwi+0I+x8G4IYmGSt4WeaEU4S
jPFtyLEKhFGZcrraGLZnO/wb0g0RTTl9HpQmZlzYh5/f+eLBX2D46P3Bex8RyPtuAQl/7r0V8/aD
G5veN3Qn/PbB9S2/7/0u4Svg3J+Ge16v+9HFgYBk0plbFhgmkzdpNkw0adaGm2yix0OzIhiqZaGw
XE/WmrKIy0WPjiwEU1zg9bzUTjy7C5Mut2PC6XoE7iUqqEmBDcUTu4J1XG7pKHDZZhINED+bC1MZ
iykTjYFfSSzC8mPuTMuNw08//vd2brFfA8EvffUhvDJjejWpKwYdyfxtC6OHbbKWQZe2aNgxg/MI
LElmqPKXQ834pmQ917WelDQ4USPs6pLg3JQBr90FZksk8Mafb8b4EQsNPF4N/6M7EXy8CqEnazio
wYd3IPgoUcHhInjvybtPbjkcSdQwqTV/0DZxSX/HH3+OdXuqUfzsMaQebetN2N8wlHGmCxvoWFTX
TuQ8fwQJp9qNaRcPYPtLp7GitRS+W1YYApOXw27FRLhETRlyj4qEZkEQVIuCoFg1AerNc2BDutSp
KQ2+x3Zg3JU2jKc4MOk5stTn9mDihVaqVwU8W7LhUJHIacAuP5osn+RW1gqOgy5tIS/26QtgRxRp
mTyvhywWXmkrEZq0avjwL154RXDRCsI7pv6qtNP7b0xuJIG8MwlWZXGDFtuijNb5a0yPbphFgBKw
CtJyShLKWnINJ0r3XEjXcoKvSiT9lwKP9lwEHSonCVOHiWcbeWFA++wtpixuG3xIHTDp5b+/CAFU
/A8Vwu9osdG+PQ3TrzRhyqkqU9iufJNj/jq9Y+Ya/YzmArilrUH0sUY2BoGQkkTTnM6SB2FVqf0T
W/KwhILixJYC/fT27YbxO7YOuMQtHAxOIGDnh+v91swYdpgfDuWsACiWhsMybhaYdGI61YuCbejF
Zkx6cQ+mvXQA01/cxwPXuJO18Nq1DU5VSbAriYMdUYEDpbP2OaQKMpbDPm0x7MiT7VMWwCF1vvlz
Dsmv3DXwSFl+OzhpJV74868G/tR9vUR4D6aGLaf3YjaJd7K+AQWTWS2pgyziU0V6XYhjHLevg3Xh
WrLWtSDQoSXVYJ9tLg5llKmUb4aOAHZtSIc/iWw2eMP4M+wIKYBd+XBqTIeOAp09KQkXkjiuFI09
WjPgvisDHvtzhwNPl5Hlbocof3nv9NNVxqDWTJ6YBNUkG0JqUwYDq7b2hRFVBNWnwnbbWrhUxCN0
Tz7c6rcOzD3fyHnQe1sM7NaTRS4YD+dFkwzS8W56YYKrUbtqCmy3LKKkJpbrUy/q2EBKuycQr0a+
uJ+DOuWZdg6qD1ESC1r2rD2FG2G/bT3JrDVwILnpkL4MDoxGGKjJI4WAVSbO0tumLzW4pSyDb+LS
hyVnuvTfwWgrvKG/X7/qQKMxYndJfygBYtea0W/VSD1WvcXgQTzjRVkLC1T2lZsocG2EJdGAlhpn
l7WGF23eOqKIaFgQF9kSyG515GZtOfDtyIM37V0IDOvyWFgURfNrbSrIEqriSSdugmN9Ilw60iAU
LL2vrYkbDD9WyrWxd3OqnqXR4R25piACQ5m5VO9dl2Ryr99KkXqDwa8rR+/VmQXn1hQ4N6cOeTak
QoiaZBCm+wwLk71MdgsjoJjmD8d1s/ROaSvgSkD5UgwIOFmJoHMkCS+1YOKV3Zj23F5EsuBFasaz
kwygPoXamQAHSuPtKcN02BbNgXXMpIwrfQkHlgFqnzQfjkkLOMiqLXOJDhbAPWOlng0jrq7Iwg0Y
Q4XzX77XNLOp2DD3NMmMgzvgdqhkyOso8dVectsOivb1mfCsTYVTbTLnUofaLXCpJh1bngifsgTS
tolwJtdxq6VkgSyWFbfaJLgSPTgRiK5Vm/+muFUnwL1msznBIGCdSBNblm+Azc5Y2FbG8mjNrmN0
49dMWpI6xb4iFg6V1Nhqc2c4tSTzDnHrzEDQwSKefgrLwyAsDocw3R/CFB84xy1EQFEc/In7icPh
fqwE7qfL4Ung+lHwDD/eiEmnWjinsgEkRhE25ZugK6NOpzjjVLSRpb/QZawgPl3GacCRFJJjysJH
FqsjYLWU1rLimEzSK2UlpmbF4O2BG5VC57//S+m48szBdS8fG5z27C6j18nKYTcmnQ5VYvxhyqa6
ShHUuR2eZIGubVnkxplwb0iBDykCBq5HVQpca1hJ5sWNQHejdJClkC6kHpzKNpBbR/9NcSldB1eK
pux7H/IOJ7JezzpSGNRpZJn8egqgCGrPIuvZyFWIHYHLgLUfAdZ1F9FJZya82jK5BxFdYHpjDpZ0
FGMN0doUMohA4v3QI6XwPFIM20P50OzJhpbUgFN7Pvw6SqhtO+DVmsMtlYFqTZkWC1i67dHQ5VGQ
zloJu8zlnF+ZxTJgmfs7jPAsU042bDyB5Khu60K4bF4In9iFeOGz31cKP+v9ti68LB0zjjUOhZ4k
7nm+E9N/fAjzXz5qnHa21TDlWD0mHKni1swyLM+ufO7i/mTFvmSplJpy93epJmVAkZT1NhukcSIB
7lwcRXk29TYVO0oD2Z6NDrEsznV7FNyKo+FNFONWSpKlOpHulwDfGuossljH0vWYtG8bHGhvX0ay
p5I4tCqWLHYzXFqT4LErDT5EB0HtOdy6Zu0pRWhFMoKLE7BgdxnxcyrGEWc6kNVbUXC0oPO11BH2
1BGujVnwrKaOqUzm9bYjzrahOtsQXTFQ7aij2ICNFQtWBCyzWLt0FrgWkZUu5IWBapVmBladtghW
W+bDPn4eHFZPw+Hf/bhS+CMMRUu7arDkQtftGc/sRsSzu40+FNVDjtcj5GA1Jp8k2XS8jksmn6Pl
8D5YzPkqsCWLaU9KbzO4mGa5tX1ZLLc0lqXYcTAXwzJpFrRJM2C1dRask2ZDlzoPjtTDrlQhNljM
Bo4dc1bBkyzFhRrExj65GKcSQZmRQ8k6Dq4d0QVLTBxrN8G1mbK+9lSyunT4EAW5F8dxYCfWkTYt
ScQkslzmTf4tZM3UcerqzdCQZ9i3Z8CzLRtstM27IgkuRfHkHYmcZuxKSVoVU7AqpASoYC0feLHN
pBSWdL0NaXmrVHL7lPnQJM8z71lJWwALklyKpHnUNrLYJLLq6JnY/7sfVQofA1U5L5zG1L1VxnEE
IGUgxrCL7aZZLx4yrf75eUSe7cAkyppYRuV/uhq+JygdJXCDduUhoDWL59QOxL8OVEHW69YFq6Al
4axJnUOkPgPyjRRIYsZBsX48lOvGw2JDBDSxkbDeNJ2yIsqOKAhYJ8wja1gCTeI8qBLmQL55FuRb
5yKoMYVbLgPWYQcBW0GeUEW8XZ8AjybK+pqTEVSfDqfcaAowa7jFTm3IxdTmfEwiOcasNrQtF75N
6TwuOO4kICs2watiM3x20J74lFGWYxlRDQGqK1hNSmglt0JbNrpHwDKr1ZCFkl6FOmkuLJLnQp1C
n0nHqjMWQk7gKgl0a6IJJ+JZ27XTsfvXL1UKr969nnXik7fvTGojLt1LAp3SuvBLHcbgE02mcSda
jLOfOYjpl/dQ6kd5P0VTFlUDCdygPYUI7Mg3yxPiMh1FU2uyLi1pXXX6fFgkzYRFwmTIokMhXRMM
8Qp/iJb6QljiR3t/SJYFQ7YiFHIS7qIVDPDpUMbO4CJeTVGX8daEXTkUHEkrE08zYEfBdaRA50yW
y4LghJZcuOdvgHQdXRs/H6r1syCLmgb3zLXwylmPgMJN8C2M5WPJHoXruWd4Fq+DBxW3YnO6Spqd
MssV0GYvg4Z+lwUja+LU0cL+tiTdapE2nwOqYYaTuxRWlDBpSdczD2V632YzGcbyCLS9+UKlIDjb
2Oz82fP7Itt3DMw42zY89dm9Q+Mv7TKFnWzBjCv7wYF9dh+jCIQ9Szn/5SbK+6sQdqgMoZT6uRPf
Mp1qRxZrRZzJMjSLtHncWrVbpkJBeboiKhhyAlay1AeSRT6QEbiKZUFQrgyDas1EKFZHkPXOgX3y
Qv64w5kq6kiWP5miuSsB6VxBoJaTi+6I5gNBOtrb0d9OBLpncTx8ixIwqT4XgUWJsFg3B8L88RBm
BkMyJwzyuWHQLJkEXfQMuCTMh3MKBSACSkd5vnXOErI6AimLQCKhzyxVN2KtLClixS6X9tQm6xx2
jhlM26LVvC6OFZQk7Ywjvt7MO0yXSJa7dhpOfvSvlWwKl/DK7a/LVx5qwuQD1Qg+VkcgdiH0HOXN
F/cMT760D5MudWEc5dJhVzoQerkVoecbuPYLOVIOr65COJNasKHgY0n8akGVYr1qQxxknzKHu74F
5evKqHACMJTv1esmEB1M5nTgSUHCjQJEIAnywOIYsJEixrtsoCSwnhQG8Z8LBS5mrQxU6xJW1vC9
HXUky+Udt23EAooJYQ3ZcMxeB++cjQQuSa+pARDC3SEe5w7JRA9IpnpBMtcfcupQzaZI2JBnWRLn
M+piw4hORVF81MuJ2uFIyZA9BVhdYRRsKI1nxbqQ9ozvSaE41pLUbNwK99ZUkqUUbygBcmVPc7eu
wGt9X1ey2WvCH/rvVRa8eBbzjjQNhxKwPqcb+oKf3wO/y50IJ2sdf4mo4NxuyqX3YMqVvYig48Fn
muFzbCeVCh7QXNngMN3cjsCxySGpkkrBK4kEdRJVeut82CTOhRVxlDXxkg25kXUBWcI2cp+sZXAm
aRNcsYUNpPeHlfO9URU/pz9ydz7Gd+Qa1XnL+5nksixabZDnslG2Nb0ysjRt0Vq9cvtqyApWG2c/
2zpIxeTSkGwMaM6E5dbFg8rV0/RWiyZCOz0I6gkesJjgCtUkKjM9YLksANbrJxA3L4BjPgXT4tVw
Jyt0J+9w3Wl+QsLoxoHoRlebCFvS1zY1W2BDclBHSsOZ5Kf73m1w3leAyGdaDIwWPbbHm8YXJBo/
ByrZ3E0Re3Tb+sb/6J9KPDvlbAtCr+zqDaZUz+Miuf6VfQg714WIU7vpu72YenEfmBUHX+iA75lG
BJypg9/xcj4O4E5KwXVnEhyJ0xxy1vGA4phObpO6nMh9KedNxmVWhSuhLVnNLc+3fqtBtnlOj/v2
DRR8SIvWZxtlq6dAWDpucEEX6enKLdwatNkr9M5lsXpdQZRJiJ1OYKyFFfGaJG3hd1ZkzX57CzDu
dKUh4lw1rKs2GTUFlG5Tyq2Nmg4rSnOtZwTAdpovbMhqtdM9oJnjRRThD9tNU2CVPB122QvgtH0Z
XMqiqQ0xcK0lWddESoeyPbumJNg2pcKGiq4lG/YEouveUniQx45/oWPY72QFQvZRAkJ8vqSxRP8R
DLWCIJUKd4FZL1/7+Paqw82Ye2HXcASle0FXOhFwefdgyMU9GHeGZNjJTkw+1YWp5/diykVmxbv5
mCt/YkDghhzdCX/iXN+WHOIckkClCXDbvhEu+esparOBjNXmUSJyL/vStZyjWGFRNXJP4bAb5eVO
KWTFsfOG3DYvgWLxBMOixoKhgMzohxPLk4zOycv1HhlrhkK2kzSKmw+7mLlDrluXGTwzuSIYnnmI
kpk9RYj+l1PDwYfL4NWeY6LsT68hr7GKmQnb5ROhWzQOuvmB0M7whHq6GxSz3SFfHgD5unHQbp4K
Xfpc/mjbdcc6eJKFMtXhSsrEpYV0OlNA7dlw69gGz70l8D9cyQf2J73QrvehTHXysZ1DweUpxqxz
+4e/BFoFtc6eTQwT/gJgYfOOweWX95kCD1WxAepB7xMN+vALuzH+NNHAiU5EnqJypguRF/YS/+7m
460TLnUg4mIrIs40UZpIHL2vDP6U2XjXk2asooqVUs8XxxJvsaRhA08eWKR3Go32xRsGXIg+iAq6
XZKWwY0yF+uFEzE9K85w5o+v96UfbOpZUZmD2du3GuYUJhkTOqv680926lM6a+5n7G/E9rP77289
2npv1cE6eO/Y0j/paCWW//Qwf0qsLo/Ta0lGaZiU2zgTNlGR0C0n650XAM1MT1jM8oR4vg/EywO5
FNRuns6HBFkC406ptBdRgAdlZR4t6dRRuXw8gT228T9QToZUjbBTtQg6XWWc8Wwbph3eaQgoTEDj
z57D10CZwKelkNV+geEHJT+8iEXHWoYnHK03THvuQN8k4lfGq5PO7iZr7cRUAngKlclndmHC+V0I
P9+GiRc7eIk410aW3YjQYzX80YYP9SxLF9kYAktzXUg7OpdTINphLk6lGxmo8KtPGdSmLYUmfi4C
M6IHredN6Ks4s/+9q8benN9c/TDlz3euZX9w/0bph903374NQ+OXw91/+eTBzax75G5f9Nzeeh+Y
/YWh/9/f7P72dtYPTmD+iQbjxFO1PYGndsJpb55JW7cFCvISOeX2qriZFLWnwHbZONgtCoNucQgU
C8wKRb2GgI2ZAuvE2XyclSUqLpQ0eNRSlteYytvi21kAvz3FvH2hR6oRfqIG405V6+c+0z7EZgDp
4hbjlZufG39/78Y8NjNbLCgVik+HerP2/vbniGwqeTj7dAeiX7+CiAudZmDP70HkuT3cWhmoE890
EJ8RDZxuJoDbMY4ogZWwcy0IPk28e6wKPodIMewrhhulnGy4zq0+Fa41W3mmw0Q5GxZkw5EKShDs
Mlfed0+lqBw1C9sOteHtG1/g42+/nn138GGY3MpSMD9MFpSCQqq4evMbuyHAwjx/VcyffQ0Asvd7
77136r3fYtWxZtPiZzqx5JUjff6nKqHblQUVJQYSCpKyLfOgiZsBm+hI2K+eDMfVk6BdHg5LUgna
qAho10+m76fDeus8s9Qijcvq616XzJ+UeFPAYg9B/YhPAw8Qrx6p5M/tJh8sH5raXoRx+Qn4bfe3
7whObNYJn+dNVquSCqfe+XXv+lNdw3NPtiNgbyUDtj/8XCcizhOg5P6MAqac340JlI2Fn2mhbKyZ
P8cKpRJynpUWBJxrgu/pWnifrIb38Qq4HyiG+54CNg0JbqR32VCkW0UCpwdn4l8WtNwz13S7blyA
5aUZdz8fuPfLT7756kcmQCc3r0QRtBbmaadisVgulfJFLtYWSpWIT0uXszZI1RQnrK8TnV269uH1
uftrMPUEya/j1UbP/cWwbkgmqyU+p0yKJR/a+JkE4lRYRU2GDWlo66iJ3JK16yM58FZb5vKsiwHL
PM2ldis3DvZYnD0l8d67Hb4M3P0lCN9bjODaNAQUxOlTT+4avIrh/XxKp1giY8DKBUdb4cfXPumZ
01yK5ee79HMu7xkOPdWEkLNkiecJ3Et7MZkyMKZpuZWeJUCZgqASQoU9mQ0kYP3PN8HnXCO8KUPz
PVsHD1IMHgeLeIU8STV41aXBk6K/OykH99z1cNy6dNA1fhFqXjw99Pbdr9+/beifawBs2codMlO5
ShCzNQKEpKV8dN6spRloviJHLohVLk7ubBGA/PP+XvtPAcP5r9/H8pNtD9b98CjCiA/dyNo0JbFQ
5a2mhGAplIlzINswFXICVLtmEqzWToRVNAEbM5WDbp08nycKdkWkaSkFdiaZxYB1J2A9SAJ6dhG4
xLXs2Vhoc+7A9KZ8+KdFD1756Pf4ZPBBkaAUS9iiARmfgW2rEV699eWbK/fU3V9xrmto3jMU+c+1
mdiT1uCRQp+NYec7DMStRvqOPzQMOFE/HPnCfgSdbTaEXGrX+51r7Au41AqX4xX68Oc6Bt0Pl/a6
7M7jTxSsS2Mpd883+ZRvNXqSqHdPjzKNy47RX/rgN3jr/rW3r/bfkw7BuIoBZi1Tydncwb+ZPPyU
ycYKNhmdr6WSSgSVwvIbQPo++tH521+YYkjJzN9bPThldylpZkoaNs2Cd83WB0L8NAhx0/jAim7T
LJPthmlDtrEzYRk73WC9dQG3atmWOb08wFZuHratjIdDQxKcW0kdtGeZfMhQ/I+UMd41Tm7ZhpDc
WMwrTTd9hsFi/vRYJh5ZPMdmNFuILUkmXMj5wUkWwLD4+UN0cU0PgWkIvrTLGEJJQdhlUgiXzEEr
9EQDgo7WGkOONyDgaK2BgB5g/Bp4uoHpu2G/UzX9XiR72APE4INlepJCBu+a1F7v0sThwKLN8M5e
PzirIhNvdn+FT/UP1rA57bf6eybevXvXycfZjU9xt1dp/h5U8d+t/1LLVBZkIGq+MkuQSbWf9j6I
/xbQH/3dG4jb34KFbWX94TvTHwZUkrjPWwtLcnPXspgh2aaZQ9rYGXDYPMfkmDjfRImMURk302if
s9LkW5NolKUtomxvA7RlMRxYz905BteObKNzWyacd+XApzkLfgWxfSFJa/UNL57rvwksFSxVIr7s
TqxRjQIr/wyGHxe8cMqw/EgrJh6o/Xb6FT4gA/9zzfA8UWvwOlE7HHiqcXgCG1O4sGtg2vldffOf
P2gMPVSD4ANVhpCD1QbfPTv0YUeJ486Tte/fcX/OueZ7uu0xiGjOH/YtjMfcpm1wil0wmEGZ3Lt4
0P+He9c288ktbMa1SNDx2d30wVIkUz517cATxcLeRjkCsqNYrjBP5BBLFQ8BNo2z9rf3biBpfyuW
NJdgXBlZXWbUsHrLgiGiAxObh6YmSiBQuRxjmaJlwlwQ4HygW5I038jGaLWUOjvUJOq9CVT39kye
NDiSUghpzcOsnVkIi1tuOPaLl2qYNagdbFl9LYXbD7un9gEqwUatJIudcOCt1++tPdaGGYfrjTMv
dT2YQBZKbm7yOlptdD9QYfTZT8KYSvAeioq7diCMypT9tYYJuytNC8+SNbeXGGccqB4IacgzjWvI
hc/2TYisy+6fXJqM5U3b+9KOtep/euPDh6/f+mzvJ8buaMGGrVXgE+As2fIlmSDSsVlxcj4jc2Sm
99NAHV1yI+MnasUKvoxIpqRwYWVh7cS+/OLbm7E3Yfr1B8M991/4/F3DhNx4hOZt7ImsSoFn+kqT
5bpp/Xbxs41B+dG9bCzVKn4O3HLXDOsylnHt67Mz0cgGvh1KYwzEtUamaryb0tkTFJNrXcpwWF2G
fnzG+t7U1p24BwSR7zC1ItJoKKAaYKy6N/BQzdcJ2FrKL773+96oPfXGpcfbhsN2E3iHa4cCj9WZ
gsn1w0818+dEkUca9ZO6qgYntZUOjq/bhkX7G/qmt5QNTKktMEbWFmBGbT5mVeUh/nDLcOebPx64
9MHvel678ekrv7n9l0sfD95t+g76tX/49vPZv/74HUs2VsFmcFO0Fz++RsvWUisRCU9Zt/Tkijyp
oJZq5Xy6J1sAxziZrXGQCmInnaOTcHNwQHUDw6v/NHDnwGs3P0HxhQNG9lzKY/XMnsUVqYjIjYF/
+upe37RVUK6ZPKjdOKfXnwKrffqKPsccSsnzokzeOwjUko08wfEjVcNm7jhSwsOGJWdmxuHjnu9u
EKhsfq6O2mH2svv377K5qFKVvY6xFVuH8PKSuhLEntvfu/z83sEJh+sRTK7uu4d0aUeJ0b+laDi8
pWR4atsO49z2SsxtLBucXVtoWNK0Aytay9H55k9w9s+/xS9vf9Xzbv/t19558G3T18aH4V/23ZNb
ulOWZ8lW0ghaB29n8xRCAkRFm0wi1bDFaww7trKPHf47CpD8dXXM6GobVndre74e1tZKJiUfJIM1
+4B5jSqbn6ZT27P5qtcwoCWQl//x7l/uvv7xW8jp2PlwVXWOQbdmGgLSVmN6ZYohIGe9KahgI3zz
N/RYJyyAQ9oKBJRRTCjcCLe8aKNvWYLJnVJ1p6wojN+egNevf9RzfaC7g1WGrWuTidhyK4HrRJWr
K2sktUoulr774PbnzT97EfMayjBrTy2mH2k2Ebj6oK6KId+mQmNgXQGmtOzAqgPNSDy5D63/+hPD
obdef/uVW1f/RFTy+jsD98uvw+RGrmF7yzjkwJcjKWVsEjFfr0egWPIl1YSPUsrXBasfX56pEEk8
RoOVq6eH6JG1joAqGVm7pRHMc3ulfAmkYGtjQaCK+DEJm0ztaKNj0+1VfBkbXaDwoTZaEO4KQXzf
0Gvbr+9b3Yehs289vH7gjf5r79X87OJn8Qfr7oflxEC9KtIUXrjJOKFsC5yTl8OfFIVXTjQ8s9cO
+eVtMLmRdU+tzRyue/XKjY8G7sQTlU6kijkJfG0QW5hjKYyuFeWrvymiib+DqbHjpWdMq2qKexfW
lyCkMBVTm0oQfboLeT+9grZ/f33g4pfvf/Jm350XP8Rw14em/pcoAi+9ATheNQzIBY1KyWlFSkqJ
PvIp72wq/sgyfeauWlL+bO2qhcw851UhkzN85OqR5ZL2OrtRFSB7cqGydARYBqrFXzG3GFnbpbSR
yQQ7C7WExWW5UkF3YGjL2JdKka0Fpw52L5loZMItHfoYD4u/hKH+9303/vA+enHw1z9+UHz5EFuO
ZArcstIYnhYN2iM0JWp4XGo0ghJXIvt0582vYPzlDWOf5s9ffOLp4uHOV/2Q3mbeRFxkofyrhCF6
6IZx3Stv/e7jYz98rrvr2fNHf/HJe6ffefDdpT/13D5JcmL7DZgmf4MhpWApZ0uT5dRbom97u0WC
Qi5iQPI0Uy4VRKzvRhf//5PvZ/hfrIx56npZyf9iUbLoSYn2xCpy0WhQZPmRkw0DXnxD/9DiHoy+
1/W90R/e/ab1s747Pzj/2o+eqT7S9VVqdQkWJKwfCpg3FZUHd3325ufvZXzZe3f+IEzq7+7eeXxK
v8j8dgIJqT8rtYyvG2Vz52Vi0SAw81bvgwXm1d58RYuYi16ZiLum1tne/DIDJY/mIn9/f15dCwsL
/v6C0XVblIL+13+7CBmBwlbL2ilT6qzMr4Vg8p68l0/ZV0iF+8P9ji//4mf+nUcOOG/cmhBx+eUf
jKfj4js9D6S9fQ9nffnll6Gurq4scP21wRwcldz8hg0JX/ol8NVWYnIS4kZ+ZFSMm/9mr5lQK7WW
hKBU8miF1uP1FY28vMPC4r8+sCPeamGtZWviJaN/S1RELGzdpPlvua2Tg8K8ZFTy+Js/2HsfVLa2
/O0B3JCY1JIwIpKplLIRFxFx0ET8R8T2zk5Mk8n5Cm6JaHTN/OgiNUFjY82PObk4m5cUqlSP6jv6
+pL/Du/D0Tk6SLnxkI0otZbmRQ4SkZwv7JNL1VKlYpRC2Doy+WhnMBwYNhKiPDXL+v76loCRvIZu
oLbSmhevWqofrU99ChlKRpZXmpdxi0UKjZVW/Xg9R3+A9RjTc/9NwBU/aq+U48EVjJwByl5jwmIF
e6OFnY6Dy4Yk+AI/EU8QR5bqCWzUjZpNPSKXi2gvNput2XOZWUvIfcUiiVhKXClTWqj4sjYWXTl3
0o+xizWsI9gXFIHZ9WxpJttG91wG0A+IRjnhv/jGwGOGYEGGRVVmBiQjr2PWKaP2MT0tY3GDQJU/
tsZMzLyUv+LlyfuNYkqAiPkbewhp9uYhBthokGNvz3jitUgiOl/yKLASr7DzR2/IsBwZM/2nXzvw
/3JjbeFhgRmsVPqowpSwSAg0BXvfjcDVmcDeJkIiSsUb6+LkPMp3Ut4JXEmKFVKz6fJXG8mZPBCN
vOaILpSSrjR7hpjZp/jRWz5Ifj563dPo65MeBcERBcD2VPhpVLH/8sAq5YrR9klG9LR4ZLz3USFM
tNZaqxERIRu9hqQSfwnDoyDN2j26/cN3iP1vvGPsv/373P5T2z8G7Biw//2A/Y/s/396xeN/fvvH
UP2/0P4xLhgj2TFgx4Ad49ix9o9tY9vYNraNbWPbyPY/AaimXz/4v36MAAAAAElFTkSuQmCC"/>
                <icon id="1" value="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
vxLlxzsUg7J7AAAAAElFTkSuQmCC"/>
                <icon id="0" value="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
778A9kmA5oLhKtUAAAAASUVORK5CYII="/>
        </icons>
        <moduleGroup id="IntegratedBioinformaticsMAQSAMToolsBowtie_1" name="Integrated Bioinformatics (MAQ, SAMTools, Bowtie)" package="Bioinformatics" version="1.0" description="This workflow contains the first step of a genomics data analysis protocol designed and implemented by Federica Torri, Fabio Macciardi and Ivo Dinov to process large number of sequence data outputted by the Illumina sequencing pipeline. See Step II analysis (GATK/QC/Cleaning) here.

This protocol is implemented using the LONI Pipeline environment and includes the following types of computational resources:

    * Mapping and Assembly with Qualities (MAQ)
    * Sequence Alignment and Mapping tools (SAMtools)
    * Bowtie
    * etc.
" posX="0" posY="0" sourceCode="">
                <authors>
                        <author fullName="Federica Torri" email="" website=""/>
                        <author fullName="Fabio Macciardi" email="" website=""/>
                        <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov/"/>
                </authors>
                <tag>genomics</tag>
                <tag>informatics</tag>
                <uri>http://www.loni.ucla.edu/twiki/bin/view/CCB/PipelineWorkflows_BioinfoMAQ</uri>
                <metadata>
                        <data key="__creationDateKey" value="Thu Mar 17 14:53:07 PDT 2011"/>
                </metadata>
                <dataModule id="SAMtoolsRoutineInputsort_1" name="SAMtools Routine Input (sort)" package="MAQ" version="0.7.1" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="26" posY="1237" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsRoutineInputsort_1.Output" name="Output" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>sort</value>
                        </values>
                </dataModule>
                <module id="SamToolsFaidx_1" name="SamTools: Faidx" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="793" posY="858" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/samtools" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsFaidx_1.OutputFAIfile" name="Output FAI file" description="Output index file (fai) file
index 	samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. 
" required="true" enabled="true" order="2" includeTransformedParameter="false">
                                <format type="File" cardinality="1" transformationBase="Input Reference FA File">
                                        <fileTypes>
                                                <filetype name="SAMtools" extension="fai" description="FAI file"/>
                                        </fileTypes>
                                        <transform order="0" operation="Append">.fai</transform>
                                </format>
                        </output>
                        <input id="SamToolsFaidx_1.SAMtoolsRoutine" name="SAMtools Routine" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsFaidx_1.InputReferenceFAFile" name="Input Reference FA File" description="Input Reference BFA file

maq match reads-1.map ref.bfa reads-1.bfq
    Align the reads to the reference" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <module id="SamToolsSort_1" name="SamTools: Sort" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="1597" posY="690" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/samtools" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsSort_1.OutputSortedBAMfile" name="Output (Sorted) BAM file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz 

-t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="2" includeTransformedParameter="false">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                        <transform order="0" operation="Subtract">.bam</transform>
                                </format>
                        </output>
                        <input id="SamToolsSort_1.SAMtoolsRoutine" name="SAMtools Routine" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsSort_1.InputunsortedBAMFile" name="Input (unsorted) BAM File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <dataModule id="SAMtoolsRoutineInputfaidx_1" name="SAMtools Routine Input (faidx)" package="MAQ" version="0.7/1" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="8" posY="787" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsRoutineInputfaidx_1.Output" name="Output" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>faidx</value>
                        </values>
                </dataModule>
                <module id="SamToolsmaq2sam-long_1" name="SamTools: maq2sam-long" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="644" posY="563" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/maq2sam-long" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsmaq2sam-long_1.OutputSAMfile" name="Output SAM file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz 

-t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="1" prefix="&gt;" prefixSpaced="true" prefixAllArgs="false">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="SamToolsmaq2sam-long_1.InputMAPFile" name="Input MAP File" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz 

-t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="0">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="map" extension="map" description="fasta mapping file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <module id="SamToolsView_1" name="SamTools: View" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

http://bioinf.scri.ac.uk/tablet/assembly-conversion.shtml


samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="1050" posY="227" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/samtools" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsView_1.OutputBAMfile" name="Output BAM file" description="Output index file (fai) file
index 	samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. 
" required="true" enabled="true" order="3" prefix="-o" prefixSpaced="true" prefixAllArgs="false">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="SamToolsView_1.SAMtoolsRoutine" name="SAMtools Routine" description=" samtools view -b -S -t reference.fasta.fai -o assembly.bam assembly.sam

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsView_1.InputSAMFile" name="Input SAM File" description="Input Reference BFA file

maq match reads-1.map ref.bfa reads-1.bfq
    Align the reads to the reference" required="true" enabled="true" order="4">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="SamToolsView_1.InputFAIFile" name="Input FAI File" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools" extension="fai" description="FAI file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="SamToolsView_1.Flags" name="Flags" description="Optional samtools VIEW flags (e.g., -bht)" required="false" enabled="true" order="1">
                                <format type="String" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <dataModule id="SAMtoolsRoutineInputview_1" name="SAMtools Routine Input (view)" package="MAQ" version="0.7.1" description="view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="725" posY="159" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsRoutineInputview_1.Output" name="Output" description="view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>view</value>
                        </values>
                </dataModule>
                <dataModule id="SAMtoolsOutput_1" name="SAMtools Output" package="SAMtools" version="0.1.9" posX="2116" posY="1024" rotation="1" sourceCode="" type="File" source="false" loopIndex="false" dirDump="true">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010"/>
                        </metadata>
                        <input id="SAMtoolsOutput_1.Input" name="Input" required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="File" extension="" description="Any type of data file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="File" extension="" description="Any type of data file"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results</value>
                        </values>
                </dataModule>
                <module id="SamToolsRemoveDuplicates_1" name="SamTools: Remove Duplicates" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="1368" posY="557" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/samtools" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsRemoveDuplicates_1.OutputNo-DuplicatesBAMfile" name="Output No-Duplicates BAM file" description="Output index file (fai) file
index 	samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. 
" required="true" enabled="true" order="3">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="SamToolsRemoveDuplicates_1.SAMtoolsRoutine" name="SAMtools Routine" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsRemoveDuplicates_1.InputBAMFile" name="Input BAM File" description="Input Reference BFA file

maq match reads-1.map ref.bfa reads-1.bfq
    Align the reads to the reference" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="SamToolsRemoveDuplicates_1.InputControlsFlags" name="Input Controls (Flags)" description="rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

OPTIONS:
-s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
-S 	Treat paired-end reads and single-end reads. " required="true" enabled="true" order="1">
                                <format type="String" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <dataModule id="SAMtoolsRoutineInputrmdup_1" name="SAMtools Routine Input (rmdup)" package="MAQ" version="0.7.1" description="view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="27" posY="1024" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsRoutineInputrmdup_1.Output" name="Output" description="view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>rmdup</value>
                        </values>
                </dataModule>
                <dataModule id="SAMtoolsControlsrmdup_1" name="SAMtools Controls (rmdup)" package="MAQ" version="0.7.1" description="-sS

view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="23" posY="1127" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsControlsrmdup_1.Output" name="Output" description="-sS

view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>-sS</value>
                        </values>
                </dataModule>
                <dataModule id="SAMtoolsRoutineInputcalmd_1" name="SAMtools Routine Input (calmd)" package="MAQ" version="0.7.1" description="calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

OPTIONS:
-e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
-u 	Output uncompressed BAM
-b 	Output compressed BAM
-S 	The input is SAM with header lines
-C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
-r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " posX="17" posY="1343" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsRoutineInputcalmd_1.Output" name="Output" description="calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

OPTIONS:
-e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
-u 	Output uncompressed BAM
-b 	Output compressed BAM
-S 	The input is SAM with header lines
-C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
-r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>calmd</value>
                        </values>
                </dataModule>
                <dataModule id="SAMtoolsRoutineInputindex_1" name="SAMtools Routine Input (index)" package="MAQ" version="0.1.10" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="68" posY="1429" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsRoutineInputindex_1.Output" name="Output" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>index</value>
                        </values>
                </dataModule>
                <module id="SamToolsIndex_1" name="SamTools: Index" package="SamTools" version="0.1.10" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="1916" posY="1094" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/samtools" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsIndex_1.OutputBAIfile" name="Output BAI file" description="Output index file (fai) file
index 	samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. 
" required="true" enabled="true" order="2" includeTransformedParameter="false">
                                <format type="File" cardinality="1" transformationBase="Input BAM File">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM Index File" extension="bai" description="SAMtools BAM Index File"/>
                                        </fileTypes>
                                        <transform order="0" operation="Append">.bai</transform>
                                </format>
                        </output>
                        <input id="SamToolsIndex_1.SAMtoolsRoutine" name="SAMtools Routine" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsIndex_1.InputBAMFile" name="Input BAM File" description="Input Reference BFA file

maq match reads-1.map ref.bfa reads-1.bfq
    Align the reads to the reference" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <module id="MAQSol2SangerConverter_1" name="MAQ Sol2Sanger Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.

The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualities are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." icon="1" posX="159" posY="256" sourceCode="" location="pipeline://cranium.loni.usc.edu/maq">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 2181060</citation>
                                <citation>PMID: 18714091</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <input id="MAQSol2SangerConverter_1.InputtheSolexaTXTreadsequencefile" name="Input the Solexa (TXT) read sequence file" description="s_1_sequence.txt is the Solexa read sequence file.

maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Text file" extension="txt" description="Text file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <output id="MAQSol2SangerConverter_1.Outputfastqfie" name="Output fastq fie" description="Output (converted) sequence.fastq file" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="MAQSol2SangerConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website=""/>
                        </executableAuthors>
                        <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                </module>
                <dataModule id="InputtheSolexaTXTreadsequencefile_1" name="Input the Solexa (TXT) read sequence file" package="LONI" version="1.0" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="320" posY="1" sourceCode="" type="File" source="true" loopIndex="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="InputtheSolexaTXTreadsequencefile_1.Output" name="Output" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Text file" extension="txt" description="Text file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <fileTypes>
                                <filetype name="Text file" extension="txt" description="Text file"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/LONI/workflows/Bioinformatics/data/s_1_1_sequence.txt</value>
                                <value>pipeline://cranium.loni.usc.edu/LONI/workflows/Bioinformatics/data/s_1_2_sequence.txt</value>
                        </values>
                </dataModule>
                <dataModule id="MAQRoutineInputsol2sanger_1" name="MAQ Routine Input (sol2sanger)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" posX="32" posY="173" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="MAQRoutineInputsol2sanger_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>sol2sanger</value>
                        </values>
                </dataModule>
                <dataModule id="MAQFastaqOutput_1" name="MAQ Fastaq Output" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="423" posY="322" rotation="1" sourceCode="" type="File" source="false" loopIndex="false" dirDump="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010"/>
                        </metadata>
                        <input id="MAQFastaqOutput_1.Input" name="Input" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/s_1_sequence.fastq</value>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/s_2_sequence.fastq</value>
                        </values>
                </dataModule>
                <dataModule id="MAQRoutineInputfastq2bfq_1" name="MAQ Routine Input (fastq2bfq)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" posX="20" posY="337" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="MAQRoutineInputfastq2bfq_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>fastq2bfq</value>
                        </values>
                </dataModule>
                <dataModule id="MAQBFQOutput_1" name="MAQ BFQ Output" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="667" posY="366" rotation="1" sourceCode="" type="File" source="false" loopIndex="false" dirDump="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010"/>
                        </metadata>
                        <input id="MAQBFQOutput_1.Input" name="Input" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ BFQ" extension="bfq" description="MAQ binary fastq file (bfq)"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="MAQ BFQ" extension="bfq" description="MAQ binary fastq file (bfq)"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/s_1_sequence.bfq</value>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/s_2_sequence.bfq</value>
                        </values>
                </dataModule>
                <module id="MAQFasta2BfaConverter_1" name="MAQ Fasta2Bfa Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.

The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." icon="1" posX="299" posY="736" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/maq">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 2181060</citation>
                                <citation>PMID: 18714091</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <input id="MAQFasta2BfaConverter_1.InputfastaReferencefie" name="Input fasta Reference fie" description="s_1_sequence.txt is the Solexa read sequence file.

maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <output id="MAQFasta2BfaConverter_1.Outputbinaryfastafilebfa" name="Output binary fasta file (bfa)" description="Output (converted) binary fastq file (bfq) file" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ BFA" extension="bfa" description="MAQ bfa File type"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="MAQFasta2BfaConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website=""/>
                        </executableAuthors>
                        <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                </module>
                <dataModule id="MAQRoutineInputfasta2bfa_1" name="MAQ Routine Input (fasta2bfa)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" posX="15" posY="654" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="MAQRoutineInputfasta2bfa_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>fasta2bfa</value>
                        </values>
                </dataModule>
                <dataModule id="MAQRoutineInputmap_1" name="MAQ Routine Input (map)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" posX="19" posY="463" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="MAQRoutineInputmap_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:

      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>map</value>
                        </values>
                </dataModule>
                <dataModule id="MAQMAPOutput_1" name="MAQ MAP Output" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="598" posY="432" rotation="1" sourceCode="" type="File" source="false" loopIndex="false" dirDump="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010"/>
                        </metadata>
                        <input id="MAQMAPOutput_1.Input" name="Input" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="map" extension="map" description="fasta mapping file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="map" extension="map" description="fasta mapping file"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/s_1_sequence_2_ref_chrm2.map</value>
                        </values>
                </dataModule>
                <dataModule id="InputReferenceFastaFile_1" name="Input Reference Fasta File" package="LONI" version="1.0" description="Enter any reference genome for the relevant species.

E.g., For humans get HG18 in fasta format from UCSC or ENSEMBL.

http://hgdownload.cse.ucsc.edu/downloads.html

" posX="11" posY="898" rotation="1" sourceCode="" type="File" source="true" loopIndex="false">
                        <uri>http://hgdownload.cse.ucsc.edu/goldenPath/hg18/bigZips/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="InputReferenceFastaFile_1.Output" name="Output" description="Enter any reference genome for the relevant species.

E.g., For humans get HG18 in fasta format from UCSC or ENSEMBL.

http://hgdownload.cse.ucsc.edu/downloads.html

" required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <fileTypes>
                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/LONI/workflows/Bioinformatics/data/ref_chr2.fasta</value>
                        </values>
                </dataModule>
                <dataModule id="MAQRefBFAOutput_1" name="MAQ Ref BFA Output" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="567" posY="769" rotation="1" sourceCode="" type="File" source="false" loopIndex="false" dirDump="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010"/>
                        </metadata>
                        <input id="MAQRefBFAOutput_1.Input" name="Input" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ BFA" extension="bfa" description="MAQ bfa File type"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="MAQ BFA" extension="bfa" description="MAQ bfa File type"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/ref_chrm2.bfa</value>
                        </values>
                </dataModule>
                <module id="MAQFastq2BfdConverter_1" name="MAQ Fastq2Bfd Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.

The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." icon="1" posX="275" posY="415" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/maq">
                        <authors>
                                <author fullName="Ivo DInov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 2181060</citation>
                                <citation>PMID: 18714091</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <input id="MAQFastq2BfdConverter_1.Inputfastqfie" name="Input fastq fie" description="s_1_sequence.txt is the Solexa read sequence file.

maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <output id="MAQFastq2BfdConverter_1.Outputbinaryfastqfilebfq" name="Output binary fastq file (bfq)" description="Output (converted) binary fastq file (bfq) file" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ BFQ" extension="bfq" description="MAQ binary fastq file (bfq)"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="MAQFastq2BfdConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website=""/>
                        </executableAuthors>
                        <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                </module>
                <module id="MAQMapper_1" name="MAQ Mapper" package="MAQ" version="0.7.1" description="Usage:   maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]

Options: -1 INT      length of the first read (&lt;=127) [0]
         -2 INT      length of the second read (&lt;=127) [0]
         -m FLOAT    rate of difference between reads and references [0.001]
         -e INT      maximum allowed sum of qualities of mismatches [70]
         -d FILE     adapter sequence file [null]
         -a INT      max distance between two paired reads [250]
         -A INT      max distance between two RF paired reads [0]
         -n INT      number of mismatches in the first 24bp [2]
         -M c|g      methylation alignment mode [null]
         -u FILE     dump unmapped and poorly aligned reads to FILE [null]
         -H FILE     dump multiple/all 01-mismatch hits to FILE [null]
         -C INT      max number of hits to output. &gt;512 for all 01 hits. [250]
         -s INT      seed for random number generator [random]
         -W          disable Smith-Waterman alignment
         -t          trim all reads (usually not recommended)
         -c          match in the colorspace

Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.

The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." icon="1" posX="418" posY="540" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/maq" gridVariables="h_vmem=8">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 2181060</citation>
                                <citation>PMID: 18714091</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <input id="MAQMapper_1.Options" name="Options" description="Options: -1 INT      length of the first read (&lt;=127) [0]
         -2 INT      length of the second read (&lt;=127) [0]
         -m FLOAT    rate of difference between reads and references [0.001]
         -e INT      maximum allowed sum of qualities of mismatches [70]
         -d FILE     adapter sequence file [null]
         -a INT      max distance between two paired reads [250]
         -A INT      max distance between two RF paired reads [0]
         -n INT      number of mismatches in the first 24bp [2]
         -M c|g      methylation alignment mode [null]
         -u FILE     dump unmapped and poorly aligned reads to FILE [null]
         -H FILE     dump multiple/all 01-mismatch hits to FILE [null]
         -C INT      max number of hits to output. &gt;512 for all 01 hits. [250]
         -s INT      seed for random number generator [random]
         -W          disable Smith-Waterman alignment
         -t          trim all reads (usually not recommended)
         -c          match in the colorspace

" required="false" enabled="false" order="1">
                                <format type="String" cardinality="1"/>
                        </input>
                        <output id="MAQMapper_1.Outputmappingfilemap" name="Output mapping file (map)" description="Output mapping file

maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]
" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="map" extension="map" description="fasta mapping file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="MAQMapper_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="MAQMapper_1.InputSequenceBFQfie" name="Input Sequence (BFQ) fie" description="maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]
" required="true" enabled="true" order="4">
                                <format type="File" cardinality="2">
                                        <fileTypes>
                                                <filetype name="MAQ BFQ" extension="bfq" description="MAQ binary fastq file (bfq)"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="MAQMapper_1.InputBFAReference" name="Input BFA Reference" description="maq map [options] &lt;out.map&gt; &lt;chr.bfa&gt; &lt;reads_1.bfq&gt; [reads_2.bfq]
" required="true" enabled="true" order="3">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ BFA" extension="bfa" description="MAQ bfa File type"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website=""/>
                        </executableAuthors>
                        <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                </module>
                <dataModule id="SAMtoolsviewflags_1" name="SAMtools view flags" package="MAQ" version="0.7.1" description="view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " posX="719" posY="260" rotation="1" sourceCode="" type="String" source="true" loopIndex="false">
                        <authors>
                                <author fullName="Ivo D. Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsviewflags_1.Output" name="Output" description="view -b -S -t

COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>-bht</value>
                        </values>
                </dataModule>
                <module id="SubSequenceExtractor_1" name="SubSequence Extractor" package="LONI" version="1.0" description="FOR REAL SEQUENCE DATA ANALYSIS REMOVE THIS MODULE.

This is a simple script (used for speedy validation) that extracts a continuous fragment of a sequence stored in a TXT file. It only leaves in the data stored between 2 user-specified lines minLine and maxLin.

extract_lines_from_Textfile.sh 1 1000 s_1_2_sequence.txt s_1_2_short_seq_1_1000.txt" icon="2" posX="189" posY="95" sourceCode="" location="pipeline://cranium.loni.usc.edu/LONI/workflows/Bioinformatics/maq/extract_lines_from_Textfile.sh">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://www.LONI.ucla.edu</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SubSequenceExtractor_1.OutputTXTfile" name="Output TXT file" description="Output of the shorter sequence" required="true" enabled="true" order="3">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file"/>
                                                <filetype name="Text file" extension="txt" description="Text file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="SubSequenceExtractor_1.InputTXTFile" name="Input TXT File" description="Input of a large TXT file storing a sequence" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Text file" extension="txt" description="Text file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="SubSequenceExtractor_1.Firstline" name="First line" description="lower limit of the lines to include in the shorter sequence." required="true" enabled="true" order="0">
                                <format type="Number" cardinality="1"/>
                        </input>
                        <input id="SubSequenceExtractor_1.LastLine" name="Last Line" description="upper limit line index" required="true" enabled="true" order="1">
                                <format type="Number" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </executableAuthors>
                        <license>LGPL</license>
                </module>
                <dataModule id="FirstLineIndex_1" name="First Line Index" package="LONI" version="1.0" description="Specify the first and last line indices of the sequence file that needs to be trunkated" posX="24" posY="58" rotation="1" sourceCode="" type="Number" source="true" loopIndex="false">
                        <uri>http://www.loni.ucla.edu</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="FirstLineIndex_1.Output" name="Output" description="Specify the first and last line indices of the sequence file that needs to be trunkated" required="true" enabled="true" order="-1">
                                <format type="Number" cardinality="1"/>
                        </output>
                        <values>
                                <value>1</value>
                        </values>
                </dataModule>
                <dataModule id="LastLineIndex_1" name="Last Line Index" package="LONI" version="1.0" description="Specify the first and last line indices of the sequence file that needs to be trunkated" posX="103" posY="0" sourceCode="" type="Number" source="true" loopIndex="false">
                        <uri>http://www.loni.ucla.edu</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="LastLineIndex_1.Output" name="Output" description="Specify the first and last line indices of the sequence file that needs to be trunkated" required="true" enabled="true" order="-1">
                                <format type="Number" cardinality="1"/>
                        </output>
                        <values>
                                <value>1000</value>
                        </values>
                </dataModule>
                <dataModule id="SAMtoolsCALMDFlags_1" name="SAMtools CALMD Flags" package="LONI" version="1.0" description="calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

OPTIONS:
-e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
-u 	Output uncompressed BAM
-b 	Output compressed BAM
-S 	The input is SAM with header lines
-C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
-r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " posX="1189" posY="120" sourceCode="" type="String" source="true" loopIndex="false">
                        <uri>http://samtools.sourceforge.net/samtools.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010"/>
                        </metadata>
                        <output id="SAMtoolsCALMDFlags_1.Output" name="Output" description="calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

OPTIONS:
-e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
-u 	Output uncompressed BAM
-b 	Output compressed BAM
-S 	The input is SAM with header lines
-C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
-r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1"/>
                        </output>
                        <values>
                                <value>-b</value>
                        </values>
                </dataModule>
                <module id="SamToolsCamldMDtag_1" name="SamTools: Camld (MD tag)" package="SamTools" version="0.1.12a" description="SAM (Sequence Alignment/Map) tools is a flexible generic format for storing nucleotide sequence alignment. SAM tools provide efficient utilities on manipulating alignments in the SAM format. 

samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. " icon="0" posX="1736" posY="892" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/samtools" executableVersion="r783">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19505943</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://sourceforge.net/projects/samtools/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="SamToolsCamldMDtag_1.OutputNo-DuplicatesBAMfile" name="Output No-Duplicates BAM file" description="Output index file (fai) file
index 	samtools index &lt;aln.bam&gt;

Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created. 
" required="true" enabled="true" order="4" prefix="&gt;" prefixSpaced="true" prefixAllArgs="false">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="SamToolsCamldMDtag_1.SAMtoolsRoutine" name="SAMtools Routine" description="
COMMANDS AND OPTIONS

    view 	samtools view [-bchuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] [-R rgFile] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]

    Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: ‘chr2’ (the whole chr2), ‘chr2:1000000’ (region starting from 1,000,000bp) or ‘chr2:1,000,000-2,000,000’ (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

    OPTIONS:
    -b 	Output in the BAM format.
    -f INT 	Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
    -F INT 	Skip alignments with bits present in INT [0]
    -h 	Include the header in the output.
    -H 	Output the header only.
    -l STR 	Only output reads in library STR [null]
    -o FILE 	Output file [stdout]
    -q INT 	Skip alignments with MAPQ smaller than INT [0]
    -r STR 	Only output reads in read group STR [null]
    -R FILE 	Output reads in read groups listed in FILE [null]
    -S 	Input is in SAM. If @SQ header lines are absent, the ‘-t’ option is required.
    -c 	Instead of printing the alignments, only count them and print the total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , are taken into account.
    -t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file.
    -u 	Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.

    tview 	samtools tview &lt;in.sorted.bam&gt; [ref.fasta]

    Text alignment viewer (based on the ncurses library). In the viewer, press ‘?’ for help and press ‘g’ to check the alignment start from a region in the format like ‘chr10:10,000,000’ or ‘=10,000,000’ when viewing the same reference sequence.

    mpileup 	samtools mpileup [-Bug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]

    Generate BCF or pileup for one or multiple BAM files. Alignment records are grouped by sample identifiers in @RG header lines. If sample identifiers are absent, each input file is regarded as one sample.

    OPTIONS:
    -B 	Disable probabilistic realignment for the computation of base alignment quality (BAQ). BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.
    -C INT 	Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. [0]
    -e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads to longer indels. [20]
    -f FILE 	The reference file [null]
    -g 	Compute genotype likelihoods and output them in the binary call format (BCF).
    -h INT 	Coefficient for modeling homopolymer errors. Given an l-long homopolymer run, the sequencing error of an indel of size s is modeled as INT*s/l. [100]
    -l FILE 	File containing a list of sites where pileup or BCF is outputted [null]
    -o INT 	Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls. [40]
    -P STR 	Comma dilimited list of platforms (determined by @RG-PL) from which indel candidates are obtained. It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA. [all]
    -q INT 	Minimum mapping quality for an alignment to be used [0]
    -Q INT 	Minimum base quality for a base to be considered [13]
    -r STR 	Only generate pileup in region STR [all sites]
    -u 	Similar to -g except that the output is uncompressed BCF, which is preferred for piping.

    reheader 	samtools reheader &lt;in.header.sam&gt; &lt;in.bam&gt;

    Replace the header in in.bam with the header in in.header.sam. This command is much faster than replacing the header with a BAM-&gt;SAM-&gt;BAM conversion.

    sort 	samtools sort [-no] [-m maxMem] &lt;in.bam&gt; &lt;out.prefix&gt;

    Sort alignments by leftmost coordinates. File &lt;out.prefix&gt;.bam will be created. This command may also create temporary files &lt;out.prefix&gt;.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

    OPTIONS:
    -o 	Output the final alignment to the standard output.
    -n 	Sort by read names rather than by chromosomal coordinates
    -m INT 	Approximately the maximum required memory. [500000000]

    merge 	samtools merge [-nur] [-h inh.sam] [-R reg] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt; [...]

    Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) ‘@’ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

    OPTIONS:
    -h FILE 	Use the lines of FILE as ‘@’ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
    -R STR 	Merge files in the specified region indicated by STR
    -r 	Attach an RG tag to each alignment. The tag value is inferred from file names.
    -n 	The input alignments are sorted by read names rather than by chromosomal coordinates
    -u 	Uncompressed BAM output

    index 	samtools index &lt;aln.bam&gt;

    Index sorted alignment for fast random access. Index file &lt;aln.bam&gt;.bai will be created.

    idxstats 	samtools idxstats &lt;aln.bam&gt;

    Retrieve and print stats in the index file. The output is TAB delimited with each line consisting of reference sequence name, sequence length, # mapped reads and # unmapped reads.

    faidx 	samtools faidx &lt;ref.fasta&gt; [region1 [...]]

    Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create &lt;ref.fasta&gt;.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

    fixmate 	samtools fixmate &lt;in.nameSrt.bam&gt; &lt;out.bam&gt;

    Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

    rmdup 	samtools rmdup [-sS] &lt;input.srt.bam&gt; &lt;out.bam&gt;

    Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. In the paired-end mode, this command ONLY works with FR orientation and requires ISIZE is correctly set. It does not work for unpaired reads (e.g. two ends mapped to different chromosomes or orphan reads).

    OPTIONS:
    -s 	Remove duplicate for single-end reads. By default, the command works for paired-end reads only.
    -S 	Treat paired-end reads and single-end reads.

    calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

    Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

    OPTIONS:
    -e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
    -u 	Output uncompressed BAM
    -b 	Output compressed BAM
    -S 	The input is SAM with header lines
    -C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
    -r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality.

    pileup 	samtools pileup [-2sSBicv] [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-C capMapQ] [-M maxMapQ] [-T theta] [-N nHap] [-r pairDiffRate] [-m mask] [-d maxIndelDepth] [-G indelPrior] &lt;in.bam&gt;|&lt;in.sam&gt;

    Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, a ’&gt;’ or ’&lt;’ for a reference skip, ‘ACGTN’ for a mismatch on the forward strand and ‘acgtn’ for a mismatch on the reverse strand. A pattern ‘\+[0-9]+[ACGTNacgtn]+’ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern ‘-[0-9]+[ACGTNacgtn]+’ represents a deletion from the reference. The deleted bases will be presented as ‘*’ in the following lines. Also at the read base column, a symbol ‘^’ marks the start of a read. The ASCII of the character following ‘^’ minus 33 gives the mapping quality. A symbol ‘$’ marks the end of a read segment.

    If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the ‘reference base’ and the ‘read bases’ columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

    NOTE: Since 0.1.10, the ‘pileup’ command is deprecated by ‘mpileup’.

    OPTIONS:
    -B 	Disable the BAQ computation. See the mpileup command for details.
    -c 	Call the consensus sequence. Options -T&quot;, &quot;-N&quot;, &quot;-I&quot; and &quot;-r are only effective when -c&quot; or &quot;-g is in use.
    -C INT 	Coefficient for downgrading the mapping quality of poorly mapped reads. See the mpileup command for details. [0]
    -d INT 	Use the first NUM reads in the pileup for indel calling for speed up. Zero for unlimited. [1024]
    -f FILE 	The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
    -g 	Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s. This option is deprecated by the mpileup command.
    -i 	Only output pileup lines containing indels.
    -I INT 	Phred probability of an indel in sequencing/prep. [40]
    -l FILE 	List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option
    -m INT 	Filter reads with flag containing bits in INT [1796]
    -M INT 	Cap mapping quality at INT [60]
    -N INT 	Number of haplotypes in the sample (&gt;=2) [2]
    -r FLOAT 	Expected fraction of differences between a pair of haplotypes [0.001]
    -s 	Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
    -S 	The input file is in SAM.
    -t FILE 	List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input &lt;in.alignment&gt; is in SAM format; otherwise it assumes in BAM format. -s together with -l as in the default format we may not know the mapping quality.
    -T FLOAT 	The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]

SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the ‘@’ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (‘=’ if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Chr	Description
        0x0001	p	the read is paired in sequencing
        0x0002	P	the read is mapped in a proper pair
        0x0004	u	the query sequence itself is unmapped
        0x0008	U	the mate is unmapped
        0x0010	r	strand of the query (1 for reverse)
        0x0020	R	strand of the mate
        0x0040	1	the read is the first read in a pair
        0x0080	2	the read is the second read in a pair
        0x0100	s	the alignment is not primary
        0x0200	f	the read fails platform/vendor quality checks
        0x0400	d	the read is either a PCR or an optical duplicate

EXAMPLES

    o 	Import SAM to BAM when @SQ lines are present in the header:

    samtools view -bS aln.sam &gt; aln.bam

    If @SQ lines are absent:

    samtools faidx ref.fa
    samtools view -bt ref.fa.fai aln.sam &gt; aln.bam

    where ref.fa.fai is generated automatically by the faidx command.

    o 	Attach the RG tag while merging sorted alignments:

    perl -e ’print &quot;@RG\tID:ga\tSM:hs\tLB:ga\tPL:Illumina\n@RG\tID:454\tSM:hs\tLB:454\tPL:454\n&quot;’ &gt; rg.txt
    samtools merge -rh rg.txt merged.bam ga.bam 454.bam

    The value in a RG tag is determined by the file name the read is coming from. In this example, in the merged.bam, reads from ga.bam will be attached RG:Z:ga, while reads from 454.bam will be attached RG:Z:454.

    o 	Call SNPs and short indels for one diploid individual:

    samtools mpileup -ugf ref.fa aln.bam | bcftools view -bvcg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 100 &gt; var.flt.vcf

    The -D option of varFilter controls the maximum read depth, which should be adjusted to about twice the average read depth. One may consider to add -C50 to mpileup if mapping quality is overestimated for reads containing excessive mismatches. Applying this option usually helps BWA-short but may not other mappers.

    o 	Call SNPs and short indels for multiple diploid individuals:

    samtools mpileup -P ILLUMINA -ugf ref.fa *.bam | bcftools view -bcvg - &gt; var.raw.bcf
    bcftools view var.raw.bcf | vcfutils.pl varFilter -D 2000 &gt; var.flt.vcf

    Individuals are identified from the SM tags in the @RG header lines. Individuals can be pooled in one alignment file; one individual can also be separated into multiple files. The -P option specifies that indel candidates should be collected only from read groups with the @RG-PL tag set to ILLUMINA. Collecting indel candidates from reads sequenced by an indel-prone technology may affect the performance of indel calling.

    o 	Derive the allele frequency spectrum (AFS) on a list of sites from multiple individuals:

    samtools mpileup -Igf ref.fa *.bam &gt; all.bcf
    bcftools view -bl sites.list all.bcf &gt; sites.bcf
    bcftools view -cGP cond2 sites.bcf &gt; /dev/null 2&gt; sites.1.afs
    bcftools view -cGP sites.1.afs sites.bcf &gt; /dev/null 2&gt; sites.2.afs
    bcftools view -cGP sites.2.afs sites.bcf &gt; /dev/null 2&gt; sites.3.afs
    ......

    where sites.list contains the list of sites with each line consisting of the reference sequence name and position. The following bcftools commands estimate AFS by EM.

    o 	Dump BAQ applied alignment for other SNP callers:

    samtools calmd -br aln.bam &gt; aln.baq.bam

    It adds and corrects the NM and MD tags at the same time. The calmd command also comes with the -C option, the same as the one in pileup and mpileup. Apply if it helps. " required="true" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsCamldMDtag_1.InputBAMFile" name="Input BAM File" description="Input Reference BFA file

maq match reads-1.map ref.bfa reads-1.bfq
    Align the reads to the reference" required="true" enabled="true" order="2" includeTransformedParameter="false">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools BAM file" extension="bam" description="SAMtools BAM file"/>
                                        </fileTypes>
                                        <transform order="0" operation="Replace">.bam:.bam</transform>
                                </format>
                        </input>
                        <input id="SamToolsCamldMDtag_1.InputControlsFlags" name="Input Controls (Flags)" description="samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

OPTIONS:
-e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
-u 	Output uncompressed BAM
-b 	Output compressed BAM
-S 	The input is SAM with header lines
-C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
-r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. " required="false" enabled="true" order="1">
                                <format type="String" cardinality="1"/>
                        </input>
                        <input id="SamToolsCamldMDtag_1.InputReferenceFasta" name="Input Reference Fasta" description="http://samtools.sourceforge.net/samtools.shtml

calmd 	samtools calmd [-eubSr] [-C capQcoef] &lt;aln.bam&gt; &lt;ref.fasta&gt;

Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag. Output SAM by default.

OPTIONS:
-e 	Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.
-u 	Output uncompressed BAM
-b 	Output compressed BAM
-S 	The input is SAM with header lines
-C INT 	Coefficient to cap mapping quality of poorly mapped reads. See the pileup command for details. [0]
-r 	Perform probabilistic realignment to compute BAQ, which will be used to cap base quality. 

" required="true" enabled="true" order="3">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://sourceforge.net/projects/samtools/
BSD</license>
                </module>
                <module id="BowtieAlignment_1" name="Bowtie: Alignment" package="Bowtie" version="0.12.7" description="bowtie -S e_coli reads/e_coli_10000snp.fq ec_snp.sam 

Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.

Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.

/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq
" icon="3" posX="679" posY="1133" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/bowtie">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19261174 
PMID: 19930550
PMID: 19289445</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://bowtie-bio.sourceforge.net/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="BowtieAlignment_1.OutputMAPfile" name="Output MAP file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz 

-t FILE 	This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="3">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="map" extension="map" description="fasta mapping file"/>
                                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file"/>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="BowtieAlignment_1.BowtieInputIndexGenome" name="Bowtie Input Index Genome" description="http://bowtie-bio.sourceforge.net/tutorial.shtml

/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq

bowtie -t e_coli reads/e_coli_1000.fq e_coli.map
" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools" extension="fai" description="FAI file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="BowtieAlignment_1.InputFQFile" name="Input FQ File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type"/>
                                                <filetype name="Sequence FASTQ File Type" extension="fq" description="Sequence FASTQ File Type"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="BowtieAlignment_1.Options" name="Options" description="Also, the -t option instructs Bowtie to print timing statistics. The output should look something like this: 

-S outputs SAM file type" required="false" enabled="true" order="0">
                                <format type="String" cardinality="1"/>
                                <values>
                                        <value>-S</value>
                                </values>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://www.cbcb.umd.edu/research/SR-assembly.shtml 
open-source Artistic License</license>
                </module>
                <module id="BowtieIndexing_1" name="Bowtie: Indexing" package="Bowtie" version="0.12.7" description="http://bowtie-bio.sourceforge.net/tutorial.shtml

Building a new index

The pre-built E. coli index included with Bowtie is built from the sequence for strain 536, known to cause urinary tract infections. We will create a new index from the sequence of E. coli strain O157:H7, a strain known to cause food poisoning. Download the sequence file by right-clicking this link and selecting &quot;Save Link As...&quot; or &quot;Save Target As...&quot;. The sequence file is named NC_002127.fna. When the sequence file is finished downloading, move it to the Bowtie install directory and issue this command:

 /applications/BOWTIE_0.10.0/bowtie-0.10.1/bowtie-build /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/
ref_chr2.fasta /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/chr_2_index 



Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.

Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.

/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq
" icon="3" posX="413" posY="1050" rotation="1" sourceCode="" location="pipeline://cranium.loni.usc.edu/bowtie-build">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov"/>
                        </authors>
                        <citations>
                                <citation>PMID: 19261174 
PMID: 19930550
PMID: 19289445</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://bowtie-bio.sourceforge.net/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010"/>
                        </metadata>
                        <output id="BowtieIndexing_1.OutputIndexfile" name="Output Index file" description="http://bowtie-bio.sourceforge.net/tutorial.shtml

Building a new index

The pre-built E. coli index included with Bowtie is built from the sequence for strain 536, known to cause urinary tract infections. We will create a new index from the sequence of E. coli strain O157:H7, a strain known to cause food poisoning. Download the sequence file by right-clicking this link and selecting &quot;Save Link As...&quot; or &quot;Save Target As...&quot;. The sequence file is named NC_002127.fna. When the sequence file is finished downloading, move it to the Bowtie install directory and issue this command:

 /applications/BOWTIE_0.10.0/bowtie-0.10.1/bowtie-build /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/
ref_chr2.fasta /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/chr_2_index 



Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.

Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.

/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq
" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools" extension="fai" description="FAI file"/>
                                                <filetype name="fasta.index" extension="fasta.index" description="fasta index file">
                                                        <need>fasta</need>
                                                </filetype>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="BowtieIndexing_1.InputFQFile" name="Input FQ File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type"/>
                                                <filetype name="Sequence FASTQ File Type" extension="fq" description="Sequence FASTQ File Type"/>
                                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="BowtieIndexing_1.Options" name="Options" description="Also, the -t option instructs Bowtie to print timing statistics. The output should look something like this: " required="false" enabled="false" order="0">
                                <format type="String" cardinality="1"/>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="" website="[PMID: 19505943] "/>
                        </executableAuthors>
                        <license>http://www.cbcb.umd.edu/research/SR-assembly.shtml 
open-source Artistic License</license>
                </module>
                <dataModule id="MAQSAMtoolsOutputs_1" name="MAQ SAMtools Outputs" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="920" posY="498" rotation="1" sourceCode="" type="File" source="false" loopIndex="false" dirDump="true">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Fri Nov 19 13:31:31 PST 2010"/>
                        </metadata>
                        <input id="MAQSAMtoolsOutputs_1.Input" name="Input" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:

      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq

where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="File" extension="" description="Any type of data file"/>
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="File" extension="" description="Any type of data file"/>
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu/{$tempdir}/pipelineTraining/{$username}/MAQ/results/</value>
                        </values>
                </dataModule>
                <annotations visible="true">
                        <annotation width="120" height="32" posX="2069" posY="938" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="7. Results">
                                <styles>
                                        <style name="7. Results$0" fontSize="20" isBold="true"/>
                                </styles>
                        </annotation>
                        <annotation width="185" height="55" posX="1592" posY="574" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="6. Sequence
Post-Processing">
                                <styles>
                                        <style name="6. Sequence
Post-Processing$0" fontSize="20" isBold="true"/>
                                </styles>
                        </annotation>
                        <annotation width="145" height="32" posX="1030" posY="168" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="5. Converter">
                                <styles>
                                        <style name="5. Converter$0" fontSize="20" isBold="true"/>
                                </styles>
                        </annotation>
                        <annotation width="234" height="78" posX="604" posY="1309" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="4. Independent
MAQ &amp; Bowtie
Sequence Alignment">
                                <styles>
                                        <style name="4. Independent
MAQ &amp; Bowtie
Sequence Alignment$0" fontSize="20" isBold="true"/>
                                        <style name="$61" fontSize="12"/>
                                </styles>
                        </annotation>
                        <annotation width="234" height="78" posX="399" posY="684" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="4. Independent
MAQ &amp; Bowtie
Sequence Alignment">
                                <styles>
                                        <style name="4. Independent
MAQ &amp; Bowtie
Sequence Alignment$0" fontSize="20" isBold="true"/>
                                        <style name="$61" fontSize="12"/>
                                </styles>
                        </annotation>
                        <annotation width="197" height="32" posX="328" posY="185" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="3. Pre-Processing">
                                <styles>
                                        <style name="3. Pre-Processing$0" fontSize="20" isBold="true"/>
                                </styles>
                        </annotation>
                        <annotation width="280" height="32" posX="436" posY="79" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="1. Input Data &amp; Reference">
                                <styles>
                                        <style name="1. Input Data &amp; Reference$0" fontSize="20" isBold="true"/>
                                </styles>
                        </annotation>
                        <annotation width="120" height="78" posX="9" posY="562" background="204,255,255,255" foreground="0,0,255,255" expanded="true" type="text" name="2. Process
Tools
Controls  ">
                                <styles>
                                        <style name="  $54" fontSize="12"/>
                                        <style name="2. Process
Tools
Controls$0" fontSize="20" isBold="true"/>
                                </styles>
                        </annotation>
                        <annotation width="859" height="28" posX="832" posY="23" background="102,102,204,51" foreground="0,0,255,255" expanded="true" type="text" name="Documentation: http://www.loni.ucla.edu/twiki/bin/view/CCB/PipelineWorkflows_BioinfoMAQ">
                                <styles>
                                        <style name="http://www.loni.ucla.edu/twiki/bin/view/CCB/PipelineWorkflows_BioinfoMAQ$15" fontSize="17" isBold="true"/>
                                        <style name="Documentation: $0" fontSize="17"/>
                                </styles>
                        </annotation>
                </annotations>
        </moduleGroup>
</pipeline>